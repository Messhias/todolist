{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDetailsHeader.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _handleChangeTaskNameContainer = (name, taskNameFocus, setTaskNameFocus, setTaskName) => {\n  if (taskNameFocus) {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      value: name,\n      onMouseLeave: () => setTaskNameFocus(false),\n      onChange: e => {\n        setTaskName(e.target.value);\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    className: \"task-title\",\n    onMouseEnter: () => setTaskNameFocus(true),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nconst TaskDetailsHeader = function () {\n  _s();\n\n  var _task$name, _task$status, _props$status;\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    handleClose: () => {},\n    find: id => {},\n    update: (id, body) => {},\n    task: {\n      name: \"\"\n    },\n    status: []\n  };\n  const {\n    update = () => {},\n    task = {\n      name: \"\",\n      id: null,\n      status: {\n        name: \"\"\n      }\n    }\n  } = props;\n  const [name, setTaskName] = React.useState((_task$name = task === null || task === void 0 ? void 0 : task.name) !== null && _task$name !== void 0 ? _task$name : \"Type your task name\");\n  const [taskNameFocus, setTaskNameFocus] = React.useState(false);\n  const [timeout, handleTimeOutChange] = React.useState(null);\n  useEffect(() => {\n    if (name !== task.name) {\n      if (taskNameFocus === false) {\n        if (timeout) {\n          handleTimeOutChange(clearTimeout(timeout));\n        } else {\n          handleTimeOutChange(setTimeout(() => {\n            update(task.id, {\n              name\n            });\n          }, 1000));\n        }\n      }\n    } else {\n      setTaskName(task.name);\n    }\n  }, [name, taskNameFocus, task, update]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    alignContent: \"center\",\n    alignItems: \"center\",\n    direction: 'column',\n    className: \"task-details-header-container\",\n    item: true,\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      direction: 'row',\n      alignItems: \"center\",\n      alignContent: \"center\",\n      spacing: 2,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 2,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        alignContent: \"center\",\n        alignItems: \"center\",\n        direction: 'column',\n        item: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"task-status-label-change\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"task-status-label-change\",\n            id: \"task-status-select\",\n            label: \"Status\",\n            value: task === null || task === void 0 ? void 0 : (_task$status = task.status) === null || _task$status === void 0 ? void 0 : _task$status.id,\n            onChange: event => props.update(task === null || task === void 0 ? void 0 : task.id, {\n              status_id: event.target.value\n            }),\n            children: props === null || props === void 0 ? void 0 : (_props$status = props.status) === null || _props$status === void 0 ? void 0 : _props$status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: s.id,\n              children: s.name\n            }, s.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 10\n            }, _this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 9,\n        sm: 9,\n        md: 9,\n        lg: 9,\n        alignContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: 'column',\n        item: true,\n        container: true,\n        children: _handleChangeTaskNameContainer(name, taskNameFocus, setTaskNameFocus, setTaskName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 1,\n        sm: 1,\n        md: 1,\n        lg: 1,\n        alignContent: \"flex-end\",\n        alignItems: \"flex-end\",\n        direction: 'column',\n        item: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => {\n            props.handleClose(props.taskModalOpen);\n            props.find(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TaskDetailsHeader, \"7eRLtm3ZQY/I52JgIu2EL7i+bZU=\");\n\n_c = TaskDetailsHeader;\nexport default TaskDetailsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetailsHeader\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDetailsHeader.js"],"names":["React","CloseIcon","Button","FormControl","Grid","InputLabel","MenuItem","Select","TextField","Typography","useEffect","_handleChangeTaskNameContainer","name","taskNameFocus","setTaskNameFocus","setTaskName","e","target","value","TaskDetailsHeader","props","handleClose","find","id","update","body","task","status","useState","timeout","handleTimeOutChange","clearTimeout","setTimeout","event","status_id","map","s","taskModalOpen"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport {Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport {useEffect} from \"react\";\n\n\nconst _handleChangeTaskNameContainer = (name, taskNameFocus, setTaskNameFocus, setTaskName) => {\n\tif (taskNameFocus) {\n\t\treturn (\n\t\t\t<TextField\n\t\t\t\tvalue={name}\n\t\t\t\tonMouseLeave={() => setTaskNameFocus(false)}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetTaskName(e.target.value)\n\t\t\t\t}}\n\t\t\t\tfullWidth\n\t\t\t/>\n\t\t);\n    }\n\n\treturn (\n\t\t<Typography\n\t\t\tclassName={\"task-title\"}\n\t\t\tonMouseEnter={() => setTaskNameFocus(true)}\n\t\t>\n\t\t\t{name}\n\t\t</Typography>\n\t);\n}\n\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskDetailsHeader = (props = {\n\thandleClose: () => {},\n\tfind: (id) => {},\n\tupdate: (id, body) => {},\n\ttask: {\n\t\tname: \"\",\n\t},\n\tstatus: [],\n}) => {\n\tconst {\n\t\tupdate = () => {},\n\t\ttask = {\n\t\t\tname: \"\",\n\t\t\tid: null,\n\t\t\tstatus: {\n\t\t\t\tname: \"\",\n\t\t\t}\n\t\t}\n\t} = props;\n\tconst [name, setTaskName] = React.useState(task?.name ?? \"Type your task name\");\n\tconst [taskNameFocus, setTaskNameFocus] = React.useState(false);\n\tconst [timeout, handleTimeOutChange] = React.useState(null);\n\n\tuseEffect(() => {\n\t\tif (name !== task.name) {\n\t\t\tif (taskNameFocus === false) {\n\t\t\t\tif (timeout) {\n\t\t\t\t\thandleTimeOutChange(clearTimeout(timeout));\n\t\t\t\t} else {\n\t\t\t\t\thandleTimeOutChange(\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tupdate(task.id, {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 1000)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n        } else {\n\t\t\tsetTaskName(task.name);\n\t\t}\n\t}, [\n\t\tname,\n\t\ttaskNameFocus,\n\t\ttask,\n\t\tupdate,\n\t]);\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tmd={12}\n\t\t\tlg={12}\n\t\t\talignContent={\"center\"}\n\t\t\talignItems={\"center\"}\n\t\t\tdirection={'column'}\n\t\t\tclassName={\"task-details-header-container\"}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tmd={12}\n\t\t\t\tlg={12}\n\t\t\t\tdirection={'row'}\n\t\t\t\talignItems={\"center\"}\n\t\t\t\talignContent={\"center\"}\n\t\t\t\tspacing={2}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\txs={2}\n\t\t\t\t\tsm={2}\n\t\t\t\t\tmd={2}\n\t\t\t\t\tlg={2}\n\t\t\t\t\talignContent={\"center\"}\n\t\t\t\t\talignItems={\"center\"}\n\t\t\t\t\tdirection={'column'}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t<InputLabel id=\"task-status-label-change\">Age</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tlabelId=\"task-status-label-change\"\n\t\t\t\t\t\t\tid=\"task-status-select\"\n\t\t\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\t\t\tvalue={task?.status?.id}\n\t\t\t\t\t\t\tonChange={event => props.update(task?.id, {\n\t\t\t\t\t\t\t\tstatus_id: event.target.value\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops?.status?.map(s =>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t\t\tvalue={s.id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\txs={9}\n\t\t\t\t\tsm={9}\n\t\t\t\t\tmd={9}\n\t\t\t\t\tlg={9}\n\t\t\t\t\talignContent={\"flex-start\"}\n\t\t\t\t\talignItems={\"flex-start\"}\n\t\t\t\t\tdirection={'column'}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t{_handleChangeTaskNameContainer(name, taskNameFocus, setTaskNameFocus, setTaskName)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\txs={1}\n\t\t\t\t\tsm={1}\n\t\t\t\t\tmd={1}\n\t\t\t\t\tlg={1}\n\t\t\t\t\talignContent={\"flex-end\"}\n\t\t\t\t\talignItems={\"flex-end\"}\n\t\t\t\t\tdirection={'column'}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\t\tcolor={\"primary\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.handleClose(props.taskModalOpen);\n\t\t\t\t\t\t\tprops.find(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default TaskDetailsHeader;"]},"metadata":{},"sourceType":"module"}