{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/AddNewTask.js\";\nimport React from \"react\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport { Button, FormControl, Grid, MenuItem, OutlinedInput, Select } from \"@mui/material\";\nimport { connect } from \"react-redux\";\nimport { get } from \"../actions/Status\";\nimport { create, find } from \"../actions/Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      deadline: \"\",\n      status_id: \"\",\n      action: () => {}\n    };\n    this.props.get();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props !== prevProps) {\n      const {\n        status = []\n      } = this.props;\n\n      if (status.length > 0) {\n        let status_id = status.filter(s => s.name === \"OPEN\");\n\n        if (status_id.length > 0) {\n          status_id = status_id[0].id;\n          this.setState({\n            status_id\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      status = []\n    } = this.props,\n          {\n      name = \"\",\n      deadline = \"\",\n      status_id = \"\"\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          placeholder: \"Task name\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: event => this.setState({\n            name: event.target.value\n          }),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"date\",\n          placeholder: \"Deadline\",\n          id: \"deadline\",\n          name: \"deadline\",\n          value: deadline,\n          onChange: event => this.setState({\n            deadline: event.target.value\n          }),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Status\",\n          value: status_id,\n          onChange: event => this.setState({\n            status_id: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"SELECT STATUS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this), status.length > 0 && status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: s.id,\n            children: s.name\n          }, s.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => this.props.create({\n            name,\n            status_id,\n            deadline\n          }),\n          disabled: name === \"\" || status_id === \"\",\n          children: \"ADD NEW TASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return { ...state.StatusStore,\n    ...state.TasksStore\n  };\n};\n\nconst mapDispatchToProps = () => dispatch => ({\n  get: () => dispatch(get()),\n  create: data => dispatch(create(data)),\n  find: id => dispatch(find(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewTask);","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/AddNewTask.js"],"names":["React","HeaderMenu","Button","FormControl","Grid","MenuItem","OutlinedInput","Select","connect","get","create","find","AddNewTask","Component","constructor","props","state","name","deadline","status_id","action","componentDidUpdate","prevProps","prevState","snapshot","status","length","filter","s","id","setState","render","history","event","target","value","map","mapStateToProps","StatusStore","TasksStore","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport {Button, FormControl, Grid, MenuItem, OutlinedInput, Select} from \"@mui/material\";\nimport {connect} from \"react-redux\";\nimport {get} from \"../actions/Status\";\nimport {create, find} from \"../actions/Tasks\";\n\nclass AddNewTask extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tdeadline: \"\",\n\t\t\tstatus_id: \"\",\n\t\t\taction: () => {\n\t\t\t},\n\t\t}\n\n\t\tthis.props.get();\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\n\t\tif (this.props !== prevProps) {\n\t\t\tconst {\n\t\t\t\tstatus = []\n\t\t\t} = this.props;\n\n\t\t\tif (status.length > 0) {\n\t\t\t\tlet status_id = status.filter(s => s.name === \"OPEN\");\n\n\t\t\t\tif (status_id.length > 0) {\n\t\t\t\t\tstatus_id = status_id[0].id;\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tstatus_id\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t\tstatus = []\n\t\t\t} = this.props,\n\t\t\t{\n\t\t\t\tname = \"\",\n\t\t\t\tdeadline = \"\",\n\t\t\t\tstatus_id = \"\",\n\t\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<HeaderMenu history={this.props.history}/>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\tplaceholder={\"Task name\"}\n\t\t\t\t\t\tid={\"name\"}\n\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tname: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\ttype={\"date\"}\n\t\t\t\t\t\tplaceholder={\"Deadline\"}\n\t\t\t\t\t\tid={\"deadline\"}\n\t\t\t\t\t\tname={\"deadline\"}\n\t\t\t\t\t\tvalue={deadline}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdeadline: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\t\tvalue={status_id}\n\t\t\t\t\t\tonChange={(event => this.setState({\n\t\t\t\t\t\t\tstatus_id: event.target.value,\n\t\t\t\t\t\t}))}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={\"\"} disabled>\n\t\t\t\t\t\t\t<em>SELECT STATUS</em>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus.length > 0 && status.map(s =>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t\tvalue={s.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\t\tonClick={() => this.props.create({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tstatus_id,\n\t\t\t\t\t\t\tdeadline,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tdisabled={name === \"\" || status_id === \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tADD NEW TASK\n\t\t\t\t\t</Button>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\t...state.StatusStore,\n\t\t...state.TasksStore,\n\t};\n}\n\nconst mapDispatchToProps = () => dispatch => ({\n\tget: () => dispatch(get()),\n\tcreate: (data) => dispatch(create(data)),\n\tfind: (id) => dispatch(find(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewTask);"]},"metadata":{},"sourceType":"module"}