{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/AddNewTask.js\";\nimport React from \"react\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport { FormControl, Grid, MenuItem, OutlinedInput, Select } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { get } from \"../actions/Status\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      status_id: null\n    };\n    this.props.get();\n  }\n\n  render() {\n    const {\n      status = []\n    } = this.props,\n          {\n      name = \"\",\n      status_id = null\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          placeholder: \"Task name\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: event => this.setState({\n            name: event.target.value\n          }),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-helper-label\",\n          id: \"demo-simple-select-helper\",\n          label: \"Age\",\n          value: status_id,\n          onChange: event => this.setState({\n            status_id: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: null,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), status.length > 0 && status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: s.id,\n            children: s.name\n          }, s.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => state.StatusStore;\n\nconst mapDispatchToProps = () => dispatch => ({\n  get: () => dispatch(get())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewTask);","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/AddNewTask.js"],"names":["React","HeaderMenu","FormControl","Grid","MenuItem","OutlinedInput","Select","connect","get","AddNewTask","Component","constructor","props","state","name","status_id","render","status","history","event","setState","target","value","length","map","s","id","mapStateToProps","StatusStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport {FormControl, Grid, MenuItem, OutlinedInput, Select} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {get} from \"../actions/Status\";\n\nclass AddNewTask extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tstatus_id: null,\n\t\t}\n\n\t\tthis.props.get();\n\t}\n\n\t\n\n\trender() {\n\t\tconst {\n\t\t\t\tstatus = []\n\t\t\t} = this.props,\n\t\t\t{\n\t\t\t\tname = \"\",\n\t\t\t\tstatus_id = null,\n\t\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<HeaderMenu history={this.props.history}/>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\tplaceholder={\"Task name\"}\n\t\t\t\t\t\tid={\"name\"}\n\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tname: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-helper-label\"\n\t\t\t\t\t\tid=\"demo-simple-select-helper\"\n\t\t\t\t\t\tlabel=\"Age\"\n\t\t\t\t\t\tvalue={status_id}\n\t\t\t\t\t\tonChange={(event => this.setState({\n\t\t\t\t\t\t\tstatus_id: event.target.value,\n\t\t\t\t\t\t}))}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={null}>\n\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus.length > 0 && status.map(s =>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t\tvalue={s.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => state.StatusStore;\n\nconst mapDispatchToProps = () => dispatch => ({\n\tget: () => dispatch(get()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewTask);"]},"metadata":{},"sourceType":"module"}