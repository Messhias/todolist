{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/TasksList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Grid } from \"@mui/material\";\nimport TaskAccordionList from \"./Table/TaskAccordionList\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksList = function () {\n  _s();\n\n  var _props$tasks;\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    tasks: [],\n    status: [],\n    taskId: null,\n    taskModalOpen: false,\n    handleChangeModal: function () {\n      let open = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return \"\";\n    }\n  };\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    id: \"tasks-list-status\",\n    item: true,\n    container: true,\n    children: props === null || props === void 0 ? void 0 : (_props$tasks = props.tasks) === null || _props$tasks === void 0 ? void 0 : _props$tasks.map(s => {\n      var _props$status;\n\n      return /*#__PURE__*/_jsxDEV(TaskAccordionList, {\n        s: s,\n        expanded: expanded,\n        handleChange: handleChange,\n        component: props.component,\n        get: props.get,\n        getStatus: props.getStatus,\n        update: props.update,\n        erase: props.erase,\n        changeStatusOptionsOpen: props.changeStatusOptionsOpen,\n        taskId: props.taskId,\n        status: (_props$status = props.status) !== null && _props$status !== void 0 ? _props$status : [],\n        handleChangeModal: props === null || props === void 0 ? void 0 : props.handleChangeModal,\n        taskModalOpen: props === null || props === void 0 ? void 0 : props.taskModalOpen,\n        find: props.find\n      }, s.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TasksList, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = TasksList;\nexport default _c2 = /*#__PURE__*/React.memo(TasksList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TasksList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/TasksList.js"],"names":["React","Grid","TaskAccordionList","TasksList","props","tasks","status","taskId","taskModalOpen","handleChangeModal","open","expanded","setExpanded","useState","handleChange","panel","event","isExpanded","map","s","component","get","getStatus","update","erase","changeStatusOptionsOpen","find","name","memo"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,IAAR,QAAoB,eAApB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,SAAS,GAAG,YAMC;AAAA;;AAAA;;AAAA,MANAC,KAMA,uEANQ;AAC1BC,IAAAA,KAAK,EAAE,EADmB;AAE1BC,IAAAA,MAAM,EAAE,EAFkB;AAG1BC,IAAAA,MAAM,EAAE,IAHkB;AAI1BC,IAAAA,aAAa,EAAE,KAJW;AAK1BC,IAAAA,iBAAiB,EAAE;AAAA,UAACC,IAAD,uEAAQ,KAAR;AAAA,aAAkB,EAAlB;AAAA;AALO,GAMR;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMC,YAAY,GAChBC,KAAD,IAAmB,CAACC,KAAD,EAA8BC,UAA9B,KAAsD;AACxEL,IAAAA,WAAW,CAACK,UAAU,GAAGF,KAAH,GAAW,KAAtB,CAAX;AACA,GAHF;;AAKA,sBACC,QAAC,IAAD;AACC,IAAA,EAAE,EAAE,EADL;AAEC,IAAA,EAAE,EAAE,EAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAIC,IAAA,EAAE,EAAE,EAJL;AAKC,IAAA,EAAE,EAAE,mBALL;AAMC,IAAA,IAAI,MANL;AAOC,IAAA,SAAS,MAPV;AAAA,cAUEX,KAVF,aAUEA,KAVF,uCAUEA,KAAK,CAAEC,KAVT,iDAUE,aAAca,GAAd,CAAkBC,CAAC;AAAA;;AAAA,0BAClB,QAAC,iBAAD;AAEC,QAAA,CAAC,EAAEA,CAFJ;AAGC,QAAA,QAAQ,EAAER,QAHX;AAIC,QAAA,YAAY,EAAEG,YAJf;AAKC,QAAA,SAAS,EAAEV,KAAK,CAACgB,SALlB;AAMC,QAAA,GAAG,EAAEhB,KAAK,CAACiB,GANZ;AAOC,QAAA,SAAS,EAAEjB,KAAK,CAACkB,SAPlB;AAQC,QAAA,MAAM,EAAElB,KAAK,CAACmB,MARf;AASC,QAAA,KAAK,EAAEnB,KAAK,CAACoB,KATd;AAUC,QAAA,uBAAuB,EAAEpB,KAAK,CAACqB,uBAVhC;AAWC,QAAA,MAAM,EAAErB,KAAK,CAACG,MAXf;AAYC,QAAA,MAAM,mBAAEH,KAAK,CAACE,MAAR,yDAAkB,EAZzB;AAaC,QAAA,iBAAiB,EAAEF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,iBAb3B;AAcC,QAAA,aAAa,EAAEL,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEI,aAdvB;AAeC,QAAA,IAAI,EAAEJ,KAAK,CAACsB;AAfb,SACMP,CAAC,CAACQ,IADR;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAAnB;AAVF;AAAA;AAAA;AAAA;AAAA,WADD;AAiCA,CA/CD;;GAAMxB,S;;KAAAA,S;AAiDN,kCAAeH,KAAK,CAAC4B,IAAN,CAAWzB,SAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport {Grid,} from \"@mui/material\";\nimport TaskAccordionList from \"./Table/TaskAccordionList\";\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TasksList = (props = {\n\ttasks: [],\n\tstatus: [],\n\ttaskId: null,\n\ttaskModalOpen: false,\n\thandleChangeModal: (open = false) => \"\",\n}): JSX.Element => {\n\tconst [expanded, setExpanded] = React.useState(false);\n\n\tconst handleChange =\n\t\t(panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\n\t\t\tsetExpanded(isExpanded ? panel : false);\n\t\t};\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tmd={12}\n\t\t\tlg={12}\n\t\t\tid={\"tasks-list-status\"}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t{\n\t\t\t\tprops?.tasks?.map(s => (\n\t\t\t\t\t<TaskAccordionList\n\t\t\t\t\t\tkey={s.name}\n\t\t\t\t\t\ts={s}\n\t\t\t\t\t\texpanded={expanded}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tcomponent={props.component}\n\t\t\t\t\t\tget={props.get}\n\t\t\t\t\t\tgetStatus={props.getStatus}\n\t\t\t\t\t\tupdate={props.update}\n\t\t\t\t\t\terase={props.erase}\n\t\t\t\t\t\tchangeStatusOptionsOpen={props.changeStatusOptionsOpen}\n\t\t\t\t\t\ttaskId={props.taskId}\n\t\t\t\t\t\tstatus={props.status ?? []}\n\t\t\t\t\t\thandleChangeModal={props?.handleChangeModal}\n\t\t\t\t\t\ttaskModalOpen={props?.taskModalOpen}\n\t\t\t\t\t\tfind={props.find}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nexport default React.memo(TasksList);"]},"metadata":{},"sourceType":"module"}