{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskName.js\",\n    _this = this;\n\nimport * as React from \"react\";\nimport { Grid, TextField } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport PropTypes from \"prop-types\";\n/**\n * @param name\n * @param taskNameFocus\n * @param setTaskNameFocus\n * @param setTaskName\n * @returns {JSX.Element}\n * @private\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _handleChangeTaskNameContainer = (name, taskNameFocus, setTaskNameFocus, setTaskName) => {\n  if (taskNameFocus) {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      value: name,\n      onMouseLeave: () => setTaskNameFocus(false),\n      onChange: e => {\n        setTaskName(e.target.value);\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    className: \"task-title\",\n    onMouseEnter: () => setTaskNameFocus(true),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nconst TaskName = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    name: \"\",\n    taskNameFocus: false,\n    setTaskNameFocus: () => {},\n    setTaskName: () => {}\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 5,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    alignContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    direction: 'column',\n    item: true,\n    container: true,\n    children: _handleChangeTaskNameContainer(props === null || props === void 0 ? void 0 : props.name, props === null || props === void 0 ? void 0 : props.taskNameFocus, props === null || props === void 0 ? void 0 : props.setTaskNameFocus, props === null || props === void 0 ? void 0 : props.setTaskName)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = TaskName;\nTaskName.propTypes = {\n  name: PropTypes.string.isRequired,\n  taskNameFocus: PropTypes.bool.isRequired,\n  setTaskNameFocus: PropTypes.func.isRequired,\n  setTaskName: PropTypes.func.isRequired\n};\nexport default TaskName;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskName\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskName.js"],"names":["React","Grid","TextField","Typography","PropTypes","_handleChangeTaskNameContainer","name","taskNameFocus","setTaskNameFocus","setTaskName","e","target","value","TaskName","props","propTypes","string","isRequired","bool","func"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,eAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,8BAA8B,GAAG,CAACC,IAAD,EAAOC,aAAP,EAAsBC,gBAAtB,EAAwCC,WAAxC,KAAwD;AAC9F,MAAIF,aAAJ,EAAmB;AAClB,wBACC,QAAC,SAAD;AACC,MAAA,KAAK,EAAED,IADR;AAEC,MAAA,YAAY,EAAE,MAAME,gBAAgB,CAAC,KAAD,CAFrC;AAGC,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAChBD,QAAAA,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACA,OALF;AAMC,MAAA,SAAS;AANV;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAED,sBACC,QAAC,UAAD;AACC,IAAA,SAAS,EAAE,YADZ;AAEC,IAAA,YAAY,EAAE,MAAMJ,gBAAgB,CAAC,IAAD,CAFrC;AAAA,cAIEF;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAtBD;AAwBA;AACA;AACA;AACA;AACA;;;AACA,MAAMO,QAAQ,GAAG;AAAA,MAChBC,KADgB,uEACR;AACPR,IAAAA,IAAI,EAAE,EADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,gBAAgB,EAAE,MAAM,CAAE,CAHnB;AAIPC,IAAAA,WAAW,EAAE,MAAM,CAAE;AAJd,GADQ;AAAA,sBAShB,QAAC,IAAD;AACC,IAAA,EAAE,EAAE,CADL;AAEC,IAAA,EAAE,EAAE,CAFL;AAGC,IAAA,EAAE,EAAE,CAHL;AAIC,IAAA,EAAE,EAAE,CAJL;AAKC,IAAA,YAAY,EAAE,YALf;AAMC,IAAA,UAAU,EAAE,YANb;AAOC,IAAA,SAAS,EAAE,QAPZ;AAQC,IAAA,IAAI,MARL;AASC,IAAA,SAAS,MATV;AAAA,cAWEJ,8BAA8B,CAC9BS,KAD8B,aAC9BA,KAD8B,uBAC9BA,KAAK,CAAER,IADuB,EAE9BQ,KAF8B,aAE9BA,KAF8B,uBAE9BA,KAAK,CAAEP,aAFuB,EAG9BO,KAH8B,aAG9BA,KAH8B,uBAG9BA,KAAK,CAAEN,gBAHuB,EAI9BM,KAJ8B,aAI9BA,KAJ8B,uBAI9BA,KAAK,CAAEL,WAJuB;AAXhC;AAAA;AAAA;AAAA;AAAA,WATgB;AAAA,CAAjB;;KAAMI,Q;AA6BNA,QAAQ,CAACE,SAAT,GAAqB;AACpBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,MAAV,CAAiBC,UADH;AAEjBV,EAAAA,aAAa,EAAEH,SAAS,CAACc,IAAV,CAAeD,UAFb;AAGjBT,EAAAA,gBAAgB,EAAEJ,SAAS,CAACe,IAAV,CAAeF,UAHhB;AAIjBR,EAAAA,WAAW,EAAEL,SAAS,CAACe,IAAV,CAAeF;AAJX,CAArB;AAOA,eAAeJ,QAAf","sourcesContent":["import * as React from \"react\";\n\nimport {Grid, TextField} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport PropTypes from \"prop-types\";\n\n\n/**\n * @param name\n * @param taskNameFocus\n * @param setTaskNameFocus\n * @param setTaskName\n * @returns {JSX.Element}\n * @private\n */\nconst _handleChangeTaskNameContainer = (name, taskNameFocus, setTaskNameFocus, setTaskName) => {\n\tif (taskNameFocus) {\n\t\treturn (\n\t\t\t<TextField\n\t\t\t\tvalue={name}\n\t\t\t\tonMouseLeave={() => setTaskNameFocus(false)}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetTaskName(e.target.value);\n\t\t\t\t}}\n\t\t\t\tfullWidth\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Typography\n\t\t\tclassName={\"task-title\"}\n\t\t\tonMouseEnter={() => setTaskNameFocus(true)}\n\t\t>\n\t\t\t{name}\n\t\t</Typography>\n\t);\n}\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskName = (\n\tprops = {\n\t\tname: \"\",\n\t\ttaskNameFocus: false,\n\t\tsetTaskNameFocus: () => {},\n\t\tsetTaskName: () => {},\n\t}\n): JSX.Element => (\n\n\t<Grid\n\t\txs={5}\n\t\tsm={5}\n\t\tmd={5}\n\t\tlg={5}\n\t\talignContent={\"flex-start\"}\n\t\talignItems={\"flex-start\"}\n\t\tdirection={'column'}\n\t\titem\n\t\tcontainer\n\t>\n\t\t{_handleChangeTaskNameContainer(\n\t\t\tprops?.name,\n\t\t\tprops?.taskNameFocus,\n\t\t\tprops?.setTaskNameFocus,\n\t\t\tprops?.setTaskName\n\t\t)}\n\t</Grid>\n);\n\nTaskName.propTypes = {\n\tname: PropTypes.string.isRequired,\n    taskNameFocus: PropTypes.bool.isRequired,\n    setTaskNameFocus: PropTypes.func.isRequired,\n    setTaskName: PropTypes.func.isRequired,\n};\n\nexport default TaskName;"]},"metadata":{},"sourceType":"module"}