{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/TasksList.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Grid } from \"@mui/material\";\nimport TaskAccordionList from \"./Table/TaskAccordionList\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TasksList(props = {\n  tasks: [],\n  status: [],\n  taskId: null\n}) {\n  _s();\n\n  var _props$tasks;\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    id: \"tasks-list-status\",\n    item: true,\n    container: true,\n    children: props === null || props === void 0 ? void 0 : (_props$tasks = props.tasks) === null || _props$tasks === void 0 ? void 0 : _props$tasks.map(s => /*#__PURE__*/_jsxDEV(TaskAccordionList, {\n      s: s,\n      expanded: expanded,\n      handleChange: handleChange,\n      component: props.component,\n      get: props.get,\n      getStatus: props.getStatus,\n      update: props.update,\n      erase: props.erase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TasksList, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = TasksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/TasksList.js"],"names":["React","Grid","TaskAccordionList","TasksList","props","tasks","status","taskId","expanded","setExpanded","useState","handleChange","panel","event","isExpanded","console","log","map","s","component","get","getStatus","update","erase"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,IAAR,QAAoB,eAApB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAG;AACzCC,EAAAA,KAAK,EAAE,EADkC;AAEzCC,EAAAA,MAAM,EAAE,EAFiC;AAGzCC,EAAAA,MAAM,EAAE;AAHiC,CAA3B,EAIC;AAAA;;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMC,YAAY,GAChBC,KAAD,IAAmB,CAACC,KAAD,EAA8BC,UAA9B,KAAsD;AACxEL,IAAAA,WAAW,CAACK,UAAU,GAAGF,KAAH,GAAW,KAAtB,CAAX;AACA,GAHF;;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,sBACC,QAAC,IAAD;AACC,IAAA,EAAE,EAAE,EADL;AAEC,IAAA,EAAE,EAAE,EAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAIC,IAAA,EAAE,EAAE,EAJL;AAKC,IAAA,EAAE,EAAE,mBALL;AAMC,IAAA,IAAI,MANL;AAOC,IAAA,SAAS,MAPV;AAAA,cAUEA,KAVF,aAUEA,KAVF,uCAUEA,KAAK,CAAEC,KAVT,iDAUE,aAAcY,GAAd,CAAkBC,CAAC,iBAClB,QAAC,iBAAD;AACC,MAAA,CAAC,EAAEA,CADJ;AAEC,MAAA,QAAQ,EAAEV,QAFX;AAGC,MAAA,YAAY,EAAEG,YAHf;AAIC,MAAA,SAAS,EAAEP,KAAK,CAACe,SAJlB;AAKC,MAAA,GAAG,EAAEf,KAAK,CAACgB,GALZ;AAMC,MAAA,SAAS,EAAEhB,KAAK,CAACiB,SANlB;AAOC,MAAA,MAAM,EAAEjB,KAAK,CAACkB,MAPf;AAQC,MAAA,KAAK,EAAElB,KAAK,CAACmB;AARd;AAAA;AAAA;AAAA;AAAA,YADD;AAVF;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA;;GAxCuBpB,S;;KAAAA,S","sourcesContent":["import * as React from 'react';\nimport {Grid,} from \"@mui/material\";\nimport TaskAccordionList from \"./Table/TaskAccordionList\";\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function TasksList(props = {\n\ttasks: [],\n\tstatus: [],\n\ttaskId: null,\n}): JSX.Element {\n\tconst [expanded, setExpanded] = React.useState(false);\n\n\tconst handleChange =\n\t\t(panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\n\t\t\tsetExpanded(isExpanded ? panel : false);\n\t\t};\n\n\tconsole.log(props);\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tmd={12}\n\t\t\tlg={12}\n\t\t\tid={\"tasks-list-status\"}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t{\n\t\t\t\tprops?.tasks?.map(s => (\n\t\t\t\t\t<TaskAccordionList\n\t\t\t\t\t\ts={s}\n\t\t\t\t\t\texpanded={expanded}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tcomponent={props.component}\n\t\t\t\t\t\tget={props.get}\n\t\t\t\t\t\tgetStatus={props.getStatus}\n\t\t\t\t\t\tupdate={props.update}\n\t\t\t\t\t\terase={props.erase}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}