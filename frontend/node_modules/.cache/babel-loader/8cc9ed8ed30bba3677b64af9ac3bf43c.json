{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/utils/Routes.js\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Pages from \"../Pages\";\nimport { getUserToken } from \"./Helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MountRoutes = () => {\n  const privateRoutes = {\n    \"/\": Pages.MainPage,\n    \"/main-page\": Pages.MainPage,\n    \"/status\": Pages.Status,\n    \"/tasks/add\": Pages.AddNewTask,\n    \"/tasks/edit/:id\": Pages.AddNewTask\n  };\n  const publicRoutes = {\n    \"/login\": Pages.Login,\n    \"/register\": Pages.Register,\n    \"/test\": Pages.Test\n  };\n  return [...Object.entries(publicRoutes).map(_ref => {\n    let [path, component] = _ref;\n    return /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: path,\n      component: component\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this);\n  }), ...Object.entries(privateRoutes).map(_ref2 => {\n    let [path, component] = _ref2;\n\n    if (getUserToken() === \"\") {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        to: {\n          pathname: \"/login\"\n        }\n      }, \"login\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: path,\n      component: component\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(Route, {\n    to: {\n      pathname: \"/login\"\n    }\n  }, \"login\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this)];\n};\n\n_c = MountRoutes;\n\nconst PageRoutes = () => /*#__PURE__*/_jsxDEV(Routes, {\n  children: MountRoutes()\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 2\n}, this);\n\n_c2 = PageRoutes;\nexport default PageRoutes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MountRoutes\");\n$RefreshReg$(_c2, \"PageRoutes\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/utils/Routes.js"],"names":["Navigate","Route","Routes","Pages","getUserToken","MountRoutes","privateRoutes","MainPage","Status","AddNewTask","publicRoutes","Login","Register","Test","Object","entries","map","path","component","pathname","PageRoutes"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAMC,aAAa,GAAG;AACrB,SAAKH,KAAK,CAACI,QADU;AAErB,kBAAcJ,KAAK,CAACI,QAFC;AAGrB,eAAWJ,KAAK,CAACK,MAHI;AAIrB,kBAAcL,KAAK,CAACM,UAJC;AAKrB,uBAAmBN,KAAK,CAACM;AALJ,GAAtB;AAQA,QAAMC,YAAY,GAAG;AACpB,cAAUP,KAAK,CAACQ,KADI;AAEpB,iBAAaR,KAAK,CAACS,QAFC;AAGpB,aAAST,KAAK,CAACU;AAHK,GAArB;AAMA,SAAO,CACN,GAAGC,MAAM,CAACC,OAAP,CAAeL,YAAf,EAA6BM,GAA7B,CAAiC;AAAA,QAAC,CAACC,IAAD,EAAOC,SAAP,CAAD;AAAA,wBACnC,QAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAED,IAFP;AAGC,MAAA,SAAS,EAAEC;AAHZ,OAIMD,IAJN;AAAA;AAAA;AAAA;AAAA,YADmC;AAAA,GAAjC,CADG,EASN,GAAGH,MAAM,CAACC,OAAP,CAAeT,aAAf,EAA8BU,GAA9B,CAAkC,SAAuB;AAAA,QAAtB,CAACC,IAAD,EAAOC,SAAP,CAAsB;;AAC3D,QAAId,YAAY,OAAO,EAAvB,EAA2B;AAC1B,0BACC,QAAC,KAAD;AACC,QAAA,EAAE,EAAE;AAACe,UAAAA,QAAQ,EAAE;AAAX;AADL,SAEM,OAFN;AAAA;AAAA;AAAA;AAAA,cADD;AAMA;;AACD,wBACC,QAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAEF,IAFP;AAGC,MAAA,SAAS,EAAEC;AAHZ,OAIMD,IAJN;AAAA;AAAA;AAAA;AAAA,YADD;AAQA,GAjBE,CATG,eA2BN,QAAC,KAAD;AACC,IAAA,EAAE,EAAE;AACHE,MAAAA,QAAQ,EAAE;AADP;AADL,KAIM,OAJN;AAAA;AAAA;AAAA;AAAA,UA3BM,CAAP;AAkCA,CAjDD;;KAAMd,W;;AAmDN,MAAMe,UAAU,GAAG,mBAClB,QAAC,MAAD;AAAA,YACEf,WAAW;AADb;AAAA;AAAA;AAAA;AAAA,QADD;;MAAMe,U;AAMN,eAAeA,UAAf","sourcesContent":["import {Navigate, Route, Routes} from \"react-router-dom\";\nimport Pages from \"../Pages\";\nimport {getUserToken} from \"./Helpers\";\n\nconst MountRoutes = () => {\n\tconst privateRoutes = {\n\t\t\"/\": Pages.MainPage,\n\t\t\"/main-page\": Pages.MainPage,\n\t\t\"/status\": Pages.Status,\n\t\t\"/tasks/add\": Pages.AddNewTask,\n\t\t\"/tasks/edit/:id\": Pages.AddNewTask,\n\t};\n\n\tconst publicRoutes = {\n\t\t\"/login\": Pages.Login,\n\t\t\"/register\": Pages.Register,\n\t\t\"/test\": Pages.Test,\n\t};\n\n\treturn [\n\t\t...Object.entries(publicRoutes).map(([path, component]) =>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={path}\n\t\t\t\tcomponent={component}\n\t\t\t\tkey={path}\n\t\t\t/>\n\t\t),\n\t\t...Object.entries(privateRoutes).map(([path, component]) => {\n\t\t\tif (getUserToken() === \"\") {\n\t\t\t\treturn (\n\t\t\t\t\t<Route\n\t\t\t\t\t\tto={{pathname: \"/login\"}}\n\t\t\t\t\t\tkey={\"login\"}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={path}\n\t\t\t\t\tcomponent={component}\n\t\t\t\t\tkey={path}\n\t\t\t\t/>\n\t\t\t);\n\t\t}),\n\t\t<Route\n\t\t\tto={{\n\t\t\t\tpathname: \"/login\"\n\t\t\t}}\n\t\t\tkey={\"login\"}\n\t\t/>\n\t];\n}\n\nconst PageRoutes = () => (\n\t<Routes>\n\t\t{MountRoutes()}\n\t</Routes>\n);\n\nexport default PageRoutes;"]},"metadata":{},"sourceType":"module"}