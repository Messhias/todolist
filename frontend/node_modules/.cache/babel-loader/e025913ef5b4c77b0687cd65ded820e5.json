{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDescription.js\",\n    _this = this;\n\nimport { Grid, TextareaAutosize, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _render = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    description: \"\",\n    descriptionFocus: false,\n    setDescriptionFocus: () => {},\n    setDescription: () => {}\n  };\n\n  if ((props === null || props === void 0 ? void 0 : props.description) === \"\") {\n    return /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      autoFocus: true,\n      className: \"task-description\",\n      onChange: event => props === null || props === void 0 ? void 0 : props.setDescription(event.target.value),\n      placeholder: \"Description\",\n      rows: 1,\n      value: props.description,\n      onMouseLeave: () => props.setDescriptionFocus(!(props === null || props === void 0 ? void 0 : props.descriptionFocus))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, _this);\n  }\n\n  if (!props.descriptionFocus) {\n    return /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      autoFocus: true,\n      className: \"task-description\",\n      onChange: event => props === null || props === void 0 ? void 0 : props.setDescription(event.target.value),\n      placeholder: \"Description\",\n      rows: 1,\n      value: props.description,\n      onMouseLeave: () => props.setDescriptionFocus(!(props === null || props === void 0 ? void 0 : props.descriptionFocus))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, _this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      onMouseEnter: () => props.setDescriptionFocus(!(props === null || props === void 0 ? void 0 : props.descriptionFocus)),\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, _this);\n  }\n};\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nconst TaskDescription = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    description: \"\",\n    setDescription: () => {}\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 6,\n    sm: 6,\n    lg: 6,\n    md: 6,\n    item: true,\n    children: _render(props)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = TaskDescription;\nTaskDescription.propTypes = {\n  description: PropTypes.string.isRequired,\n  setDescription: PropTypes.func.isRequired,\n  descriptionFocus: PropTypes.bool.isRequired,\n  setDescriptionFocus: PropTypes.func.isRequired\n};\nexport default TaskDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDescription\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDescription.js"],"names":["Grid","TextareaAutosize","Typography","React","PropTypes","_render","props","description","descriptionFocus","setDescriptionFocus","setDescription","event","target","value","TaskDescription","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import {Grid, TextareaAutosize, Typography} from \"@mui/material\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst _render = (props = {\n\tdescription: \"\",\n\tdescriptionFocus: false,\n\tsetDescriptionFocus: () => {\n\t},\n\tsetDescription: () => {},\n}) => {\n\n\tif (props?.description === \"\") {\n\t\treturn (\n\t\t\t<TextareaAutosize\n\t\t\t\tautoFocus\n\t\t\t\tclassName=\"task-description\"\n\t\t\t\tonChange={(event) => props?.setDescription(event.target.value)}\n\t\t\t\tplaceholder=\"Description\"\n\t\t\t\trows={1}\n\t\t\t\tvalue={props.description}\n\t\t\t\tonMouseLeave={() => props.setDescriptionFocus(!props?.descriptionFocus)}\n\t\t\t/>\n\t\t);\n\t}\n\n\tif (!props.descriptionFocus) {\n\t\treturn (\n\t\t\t<TextareaAutosize\n\t\t\t\tautoFocus\n\t\t\t\tclassName=\"task-description\"\n\t\t\t\tonChange={(event) => props?.setDescription(event.target.value)}\n\t\t\t\tplaceholder=\"Description\"\n\t\t\t\trows={1}\n\t\t\t\tvalue={props.description}\n\t\t\t\tonMouseLeave={() => props.setDescriptionFocus(!props?.descriptionFocus)}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Typography\n\t\t\t\tonMouseEnter={() => props.setDescriptionFocus(!props?.descriptionFocus)}\n\t\t\t>\n\t\t\t\t{props.description}\n\t\t\t</Typography>\n\t\t);\n\t}\n}\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskDescription = (props = {\n\tdescription: \"\",\n\tsetDescription: () => {\n\t},\n}): JSX.Element => (\n\t<Grid\n\t\txs={6}\n\t\tsm={6}\n\t\tlg={6}\n\t\tmd={6}\n\t\titem\n\t>\n\t\t{_render(props)}\n\t</Grid>\n);\n\nTaskDescription.propTypes = {\n\tdescription: PropTypes.string.isRequired,\n\tsetDescription: PropTypes.func.isRequired,\n\tdescriptionFocus: PropTypes.bool.isRequired,\n\tsetDescriptionFocus: PropTypes.func.isRequired,\n};\n\nexport default TaskDescription;"]},"metadata":{},"sourceType":"module"}