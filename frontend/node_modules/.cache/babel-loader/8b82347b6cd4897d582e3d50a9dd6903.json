{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/Status.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { create, erase, get, update } from \"../actions/Status\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport AddNewStatusForm from \"../components/Status/AddNewStatusForm\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Status = props => {\n  _s();\n\n  const {\n    get = () => {},\n    erase = id => {},\n    create = (data = {}) => {},\n    update = (data = {}) => {},\n    status = [],\n    status_errors = {}\n  } = props,\n        [addFormOpen = false, handleFormOpen = () => {}] = useState(false),\n        [editTask, handleEditTask] = useState(null);\n  useEffect(() => get(), [get]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    md: 12,\n    item: true,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n      history: props.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => handleFormOpen(!addFormOpen),\n        children: addFormOpen ? \"Close form\" : \"Add new status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), addFormOpen ? /*#__PURE__*/_jsxDEV(AddNewStatusForm, {\n      create: create,\n      update: update,\n      status_errors: status_errors,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"CREATE DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ACTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: status.map(s => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: s.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: s.formatted_created_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              \"aria-controls\": \"basic-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: () => erase(s.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-controls\": \"basic-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: () => {\n                handleEditTask(s);\n                handleFormOpen(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 10\n          }, this)]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Status, \"inSO10Re0kl0+m/6YZwnCk2BgIE=\");\n\n_c = Status;\n\nconst mapStateToProps = state => state.StatusStore;\n\nconst mapDispatchToProps = dispatch => ({\n  get: () => dispatch(get()),\n  erase: id => dispatch(erase(id)),\n  create: (data = {}) => dispatch(create(data !== null && data !== void 0 ? data : false)),\n  update: (id, data) => dispatch(update(id, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status);\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/Status.js"],"names":["Grid","Table","TableBody","TableCell","TableHead","TableRow","HeaderMenu","connect","React","useEffect","useState","create","erase","get","update","DeleteIcon","Button","AddNewStatusForm","EditIcon","Status","props","id","data","status","status_errors","addFormOpen","handleFormOpen","editTask","handleEditTask","history","map","s","name","formatted_created_date","mapStateToProps","state","StatusStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {Grid, Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport {connect} from \"react-redux\";\nimport React, {useEffect, useState} from \"react\";\nimport {create, erase, get, update} from \"../actions/Status\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport AddNewStatusForm from \"../components/Status/AddNewStatusForm\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Status = (props) => {\n\tconst {\n\t\t\tget = () => {\n\t\t\t},\n\t\t\terase = (id) => {\n\t\t\t},\n\t\t\tcreate = (data = {}) => {\n\t\t\t},\n\t\t\tupdate = (data = {}) => {\n\t\t\t},\n\t\t\tstatus = [],\n\t\t\tstatus_errors = {},\n\t\t} = props,\n\t\t[\n\t\t\taddFormOpen = false,\n\t\t\thandleFormOpen = () => {\n\t\t\t}\n\t\t] = useState(false),\n\t\t[\n\t\t\teditTask,\n\t\t\thandleEditTask\n\t\t] = useState(null);\n\n\tuseEffect(() => get(), [\n\t\tget,\n\t]);\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tlg={12}\n\t\t\tmd={12}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t<HeaderMenu history={props.history}/>\n\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\tonClick={() => handleFormOpen(!addFormOpen)}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\taddFormOpen ? \"Close form\" : \"Add new status\"\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t\t{\n\t\t\t\taddFormOpen ?\n\t\t\t\t\t<AddNewStatusForm\n\t\t\t\t\t\tcreate={create}\n\t\t\t\t\t\tupdate={update}\n\t\t\t\t\t\tstatus_errors={status_errors}\n\t\t\t\t\t\teditTask={editTask}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tID\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tCREATE DATE\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tACTIONS\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{status.map(s =>\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{s.id}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{s.formatted_created_date}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\taria-controls=\"basic-menu\"\n\t\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => erase(s.id)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon/>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\taria-controls=\"basic-menu\"\n\t\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleEditTask(s);\n\t\t\t\t\t\t\t\t\t\t\t\thandleFormOpen(true);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nconst mapStateToProps = state => state.StatusStore;\n\nconst mapDispatchToProps = dispatch => ({\n\tget: () => dispatch(get()),\n\terase: (id) => dispatch(erase(id)),\n\tcreate: (data = {}) => dispatch(create(data ?? false)),\n\tupdate: (id, data) => dispatch(update(id, data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status);"]},"metadata":{},"sourceType":"module"}