{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\nvar _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/App.js\";\nimport './App.css';\nimport { Grid, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { get, update } from \"./actions/Tasks\";\nimport { get as getStatus } from './actions/Status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _renderCommonColumns = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderCommonColumns\");\n\nvar _renderActionButtons = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderActionButtons\");\n\nvar _renderTasks = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderTasks\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Object.defineProperty(this, _renderCommonColumns, {\n      writable: true,\n      value: (task = {\n        id: null,\n        name: \"\",\n        is_closed: false,\n        status: {\n          name: \"\"\n        },\n        formatted_created_date: \"\"\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: task.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: task.is_closed ? \"Closed\" : \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: task.status.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: task.formatted_created_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true)\n    });\n    Object.defineProperty(this, _renderActionButtons, {\n      writable: true,\n      value: (task, status, changeStatusOptionsOpen) => {\n        console.log(task);\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"basic-button\",\n            \"aria-controls\": \"basic-menu\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => {\n              this.setState({\n                changeStatusOptionsOpen: !changeStatusOptionsOpen\n              });\n            },\n            children: \"CHANGE STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"basic-button\",\n            keepMounted: true,\n            open: changeStatusOptionsOpen,\n            onClose: () => this.setState({\n              changeStatusOptionsOpen: !changeStatusOptionsOpen\n            }),\n            children: status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: () => {\n                console.log(s);\n                this.props.update(task.id, {\n                  status_id: s.id\n                });\n                this.setState({\n                  changeStatusOptionsOpen: !changeStatusOptionsOpen\n                });\n              },\n              children: s.name\n            }, s.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }, this);\n      }\n    });\n    Object.defineProperty(this, _renderTasks, {\n      writable: true,\n      value: (tasks, status, changeStatusOptionsOpen) => {\n        let view = [];\n\n        if (tasks.length > 0) {\n          tasks.forEach((t, index) => view.push( /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [_classPrivateFieldLooseBase(this, _renderCommonColumns)[_renderCommonColumns](t), _classPrivateFieldLooseBase(this, _renderActionButtons)[_renderActionButtons](index, status, changeStatusOptionsOpen)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)));\n        }\n\n        view = /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6,\n            children: \"NO TASKS FOUND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 12\n        }, this);\n        return view;\n      }\n    });\n    this.state = {\n      changeStatusOptionsOpen: false\n    };\n    this.props.get();\n    this.props.getStatus();\n  }\n  /**\n   * @param task\n   * @returns {JSX.Element}\n   * @private\n   */\n\n\n  render() {\n    const {\n      tasks = [],\n      status = []\n    } = this.props,\n          {\n      changeStatusOptionsOpen = false\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Closed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"CREATE DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: _classPrivateFieldLooseBase(this, _renderTasks)[_renderTasks](tasks, status, changeStatusOptionsOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    StatusStore,\n    TasksStore\n  } = state;\n  return { ...StatusStore,\n    ...TasksStore\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  get: () => dispatch(get()),\n  getStatus: () => dispatch(getStatus()),\n  update: (id, body) => dispatch(update(id, body))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/App.js"],"names":["Grid","Table","TableBody","TableCell","TableHead","TableRow","Button","Menu","MenuItem","React","connect","get","update","getStatus","App","Component","constructor","props","task","id","name","is_closed","status","formatted_created_date","changeStatusOptionsOpen","console","log","undefined","setState","map","s","status_id","tasks","view","length","forEach","t","index","push","state","render","mapStateToProps","StatusStore","TasksStore","mapDispatchToProps","dispatch","body"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Grid, Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {get, update} from \"./actions/Tasks\";\nimport {get as getStatus} from './actions/Status';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchangeStatusOptionsOpen: false,\n\t\t};\n\t\tthis.props.get();\n\t\tthis.props.getStatus();\n\t}\n\n\t/**\n\t * @param task\n\t * @returns {JSX.Element}\n\t * @private\n\t */\n\t#_renderCommonColumns = (task = {\n\t\tid: null,\n\t\tname: \"\",\n\t\tis_closed: false,\n\t\tstatus: {\n\t\t\tname: \"\",\n\t\t},\n\t\tformatted_created_date: \"\",\n\t}): JSX.Element => (\n\t\t<>\n\t\t\t<TableCell>\n\t\t\t\t{task.id}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task.is_closed ? \"Closed\" : \"Open\"}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task.status.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task.formatted_created_date}\n\t\t\t</TableCell>\n\t\t</>\n\t);\n\n\t#_renderActionButtons = (task, status, changeStatusOptionsOpen) => {\n\t\tconsole.log(task);\n\t\treturn (\n\t\t\t<TableCell>\n\t\t\t\t<Button\n\t\t\t\t\tid=\"basic-button\"\n\t\t\t\t\taria-controls=\"basic-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCHANGE STATUS\n\t\t\t\t</Button>\n\t\t\t\t<Menu\n\t\t\t\t\tid=\"basic-button\"\n\t\t\t\t\tkeepMounted\n\t\t\t\t\topen={changeStatusOptionsOpen}\n\t\t\t\t\tonClose={() => this.setState({\n\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus.map(s =>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tconsole.log(s);\n\t\t\t\t\t\t\t\t\tthis.props.update(task.id, {\n\t\t\t\t\t\t\t\t\t\tstatus_id: s.id,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Menu>\n\t\t\t</TableCell>\n\t\t);\n\t}\n\n\t#_renderTasks = (tasks, status, changeStatusOptionsOpen) => {\n\t\tlet view = [];\n\n\t\tif (tasks.length > 0) {\n\t\t\ttasks.forEach((t, index) =>\n\t\t\t\tview.push(<TableRow key={t.id}>\n\t\t\t\t\t{this.#_renderCommonColumns(t)}\n\t\t\t\t\t{this.#_renderActionButtons(index, status, changeStatusOptionsOpen)}\n\t\t\t\t</TableRow>));\n\t\t}\n\n\n\t\t\tview = (<TableRow>\n\t\t\t\t<TableCell colSpan={6}>\n\t\t\t\t\tNO TASKS FOUND\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>)\n\n\t\treturn view;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t\ttasks = [],\n\t\t\t\tstatus = [],\n\t\t\t} = this.props,\n\t\t\t{\n\t\t\t\tchangeStatusOptionsOpen = false\n\t\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tID\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tClosed\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tCREATE DATE\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tACTIONS\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{this.#_renderTasks(tasks, status, changeStatusOptionsOpen)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst {\n\t\tStatusStore,\n\t\tTasksStore,\n\t} = state;\n\n\treturn {\n\t\t...StatusStore,\n\t\t...TasksStore,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tget: () => dispatch(get()),\n\tgetStatus: () => dispatch(getStatus()),\n\tupdate: (id, body) => dispatch(update(id, body)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}