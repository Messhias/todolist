{"ast":null,"code":"import Request from \"../../utils/Request\";\nimport { CREATE_TASKS, DELETE_TASK, FIND_TASKS, GET_TASKS, UPDATE_TASK } from \"./types\";\nexport const get = (relationships = []) => dispatch => {\n  dispatch({\n    type: GET_TASKS,\n    loading_tasks: true\n  });\n  let url = \"/tasks\";\n\n  if (relationships.length > 0) {\n    relationships = Request.parseParams(relationships);\n    url = `/tasks?${relationships}`;\n  }\n\n  Request.get(url).then(response => {\n    dispatch({\n      type: GET_TASKS,\n      loading_tasks: false,\n      tasks: response.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_TASKS,\n      loading_tasks: false\n    });\n    console.error(error.response);\n  });\n};\nexport const update = (id, body) => dispatch => {\n  if (id && body) {\n    dispatch({\n      type: UPDATE_TASK,\n      loading_tasks: true\n    });\n    Request.put(`/tasks/${id}`, body).then(() => {\n      dispatch(get());\n      dispatch({\n        type: UPDATE_TASK,\n        loading_tasks: false\n      });\n    }).catch(error => console.error(error));\n    dispatch({\n      type: UPDATE_TASK,\n      loading_tasks: false\n    });\n  }\n};\nexport const erase = id => dispatch => {\n  if (id) {\n    dispatch({\n      type: DELETE_TASK,\n      loading_tasks: true\n    });\n    Request.delete(`/tasks/${id}`).then(() => {\n      dispatch(get());\n      dispatch({\n        type: UPDATE_TASK,\n        loading_tasks: false\n      });\n    }).catch(error => console.error(error));\n  }\n};\nexport const create = (data = {}) => dispatch => {\n  if (data) {\n    dispatch({\n      type: CREATE_TASKS,\n      loading_tasks: true,\n      tasks_errors: {}\n    });\n    Request.post(\"/tasks\", data).then(() => dispatch(get())).catch(error => {\n      var _error$response$data, _error$response;\n\n      dispatch({\n        type: CREATE_TASKS,\n        loading_tasks: false,\n        tasks_errors: (_error$response$data = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) !== null && _error$response$data !== void 0 ? _error$response$data : {}\n      });\n      console.error(error);\n    });\n  }\n};\nexport const find = id => dispatch => {\n  if (id) {\n    dispatch({\n      type: FIND_TASKS,\n      loading_tasks: true,\n      tasks_errors: {}\n    });\n    Request.get(`/tasks/${id}`).then(response => dispatch({\n      type: FIND_TASKS,\n      task: response === null || response === void 0 ? void 0 : response.data,\n      loading_tasks: false\n    })).catch(error => {\n      var _error$response$data2, _error$response2;\n\n      dispatch({\n        type: FIND_TASKS,\n        loading_tasks: false,\n        tasks_errors: (_error$response$data2 = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) !== null && _error$response$data2 !== void 0 ? _error$response$data2 : {}\n      });\n      console.error(error);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/actions/Tasks/index.js"],"names":["Request","CREATE_TASKS","DELETE_TASK","FIND_TASKS","GET_TASKS","UPDATE_TASK","get","relationships","dispatch","type","loading_tasks","url","length","parseParams","then","response","tasks","data","catch","error","console","update","id","body","put","erase","delete","create","tasks_errors","post","find","task"],"mappings":"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","sourcesContent":["import Request from \"../../utils/Request\";\nimport {CREATE_TASKS, DELETE_TASK, FIND_TASKS, GET_TASKS, UPDATE_TASK} from \"./types\";\n\n\nexport const get = (relationships = []) => dispatch => {\n\tdispatch({\n\t\ttype: GET_TASKS,\n\t\tloading_tasks: true,\n\t});\n\n\tlet url = \"/tasks\";\n\n\tif (relationships.length > 0) {\n\t\trelationships = Request.parseParams(relationships);\n\t\turl = `/tasks?${relationships}`;\n\t}\n\n\tRequest.get(url)\n\t\t.then(response => {\n\n\t\t\tdispatch({\n\t\t\t\ttype: GET_TASKS,\n\t\t\t\tloading_tasks: false,\n\t\t\t\ttasks: response.data,\n\t\t\t});\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({\n\t\t\t\ttype: GET_TASKS,\n\t\t\t\tloading_tasks: false\n\t\t\t});\n\t\t\tconsole.error(error.response);\n\t\t});\n}\n\nexport const update = (id, body) => dispatch => {\n\tif (id && body) {\n\t\tdispatch({\n\t\t\ttype: UPDATE_TASK,\n\t\t\tloading_tasks: true,\n\t\t});\n\n\t\tRequest.put(`/tasks/${id}`, body)\n\t\t\t.then(() => {\n\t\t\t\tdispatch(get());\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_TASK,\n\t\t\t\t\tloading_tasks: false,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => console.error(error));\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_TASK,\n\t\t\tloading_tasks: false,\n\t\t});\n\t}\n}\n\nexport const erase = (id) => dispatch => {\n\tif (id) {\n\t\tdispatch({\n\t\t\ttype: DELETE_TASK,\n\t\t\tloading_tasks: true,\n\t\t});\n\n\t\tRequest.delete(`/tasks/${id}`)\n\t\t\t.then(() => {\n\t\t\t\tdispatch(get());\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_TASK,\n\t\t\t\t\tloading_tasks: false,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => console.error(error));\n\t}\n};\n\nexport const create = (data = {}) => dispatch => {\n\tif (data) {\n\t\tdispatch({\n\t\t\ttype: CREATE_TASKS,\n\t\t\tloading_tasks: true,\n\t\t\ttasks_errors: {},\n\t\t});\n\t\tRequest.post(\"/tasks\", data)\n\t\t\t.then(() => dispatch(get()))\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: CREATE_TASKS,\n\t\t\t\t\tloading_tasks: false,\n\t\t\t\t\ttasks_errors: error?.response?.data ?? {},\n\t\t\t\t});\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n}\n\nexport const find = (id) => dispatch => {\n\tif (id) {\n\t\tdispatch({\n\t\t\ttype: FIND_TASKS,\n\t\t\tloading_tasks: true,\n\t\t\ttasks_errors: {},\n\t\t});\n\t\tRequest.get(`/tasks/${id}`)\n\t\t\t.then((response) => dispatch({\n\t\t\t\ttype: FIND_TASKS,\n\t\t\t\ttask: response?.data,\n\t\t\t\tloading_tasks: false,\n\t\t\t}))\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: FIND_TASKS,\n\t\t\t\t\tloading_tasks: false,\n\t\t\t\t\ttasks_errors: error?.response?.data ?? {},\n\t\t\t\t});\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n};"]},"metadata":{},"sourceType":"module"}