{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskMainContent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Grid, TextareaAutosize } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport TaskStatusHistoryListing from \"./TaskStatusHistoryListing\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskMainContent = function () {\n  _s();\n\n  var _props$task$status_hi, _props$task;\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    task: {\n      description: \"\",\n      id: null\n    },\n    update: (id, body) => {}\n  };\n  const [description, setDescription] = React.useState(props.task.description);\n  const [timeout, handleTimeOutChange] = React.useState(null);\n  const status_history = (_props$task$status_hi = props === null || props === void 0 ? void 0 : (_props$task = props.task) === null || _props$task === void 0 ? void 0 : _props$task.status_history) !== null && _props$task$status_hi !== void 0 ? _props$task$status_hi : [];\n  const {\n    task = {\n      id: null\n    },\n    update = () => {}\n  } = props;\n  useEffect(() => {\n    if (task.description !== description) {\n      if (timeout) {\n        handleTimeOutChange(clearTimeout(timeout));\n      } else {\n        handleTimeOutChange(setTimeout(() => update(task.id, {\n          description\n        }), 1000));\n      }\n    }\n  }, [description, task, timeout, update]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    md: 12,\n    spacing: 2,\n    item: true,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 6,\n      sm: 6,\n      lg: 6,\n      md: 6,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 20,\n        placeholder: \"Minimum 3 rows\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 6,\n      sm: 6,\n      lg: 6,\n      md: 6,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 12,\n        lg: 12,\n        md: 12,\n        item: true,\n        container: true,\n        children: \"STATUS HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(TaskStatusHistoryListing, {\n        status_history: status_history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TaskMainContent, \"CI8e2pivvYTwZlGlITNfxwWRyYA=\");\n\n_c = TaskMainContent;\nexport default TaskMainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskMainContent\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskMainContent.js"],"names":["Grid","TextareaAutosize","React","useEffect","TaskStatusHistoryListing","TaskMainContent","props","task","description","id","update","body","setDescription","useState","timeout","handleTimeOutChange","status_history","clearTimeout","setTimeout","e","target","value"],"mappings":"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","sourcesContent":["import {Grid, TextareaAutosize} from \"@mui/material\";\nimport * as React from \"react\";\nimport {useEffect} from \"react\";\nimport TaskStatusHistoryListing from \"./TaskStatusHistoryListing\";\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskMainContent = (props = {\n\ttask: {\n\t\tdescription: \"\",\n\t\tid: null,\n\t},\n\tupdate: (id, body) => {\n\t},\n}): JSX.Element => {\n\tconst [description, setDescription] = React.useState(props.task.description);\n\tconst [timeout, handleTimeOutChange] = React.useState(null);\n\tconst status_history = props?.task?.status_history ?? [];\n\tconst {\n\t\ttask = {\n\t\t\tid: null,\n\t\t},\n\t\tupdate = () => {},\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (task.description !== description) {\n\t\t\tif (timeout) {\n\t\t\t\thandleTimeOutChange(clearTimeout(timeout));\n\t\t\t} else {\n\t\t\t\thandleTimeOutChange(setTimeout(() => update(task.id, {\n\t\t\t\t\tdescription\n\t\t\t\t}), 1000));\n\t\t\t}\n\t\t}\n\t}, [\n\t\tdescription,\n\t\ttask,\n\t\ttimeout,\n\t\tupdate,\n\t]);\n\n\treturn (\n\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tlg={12}\n\t\t\tmd={12}\n\t\t\tspacing={2}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t<Grid\n\t\t\t\txs={6}\n\t\t\t\tsm={6}\n\t\t\t\tlg={6}\n\t\t\t\tmd={6}\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t<TextareaAutosize\n\t\t\t\t\taria-label=\"minimum height\"\n\t\t\t\t\tminRows={20}\n\t\t\t\t\tplaceholder=\"Minimum 3 rows\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\txs={6}\n\t\t\t\tsm={6}\n\t\t\t\tlg={6}\n\t\t\t\tmd={6}\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\txs={12}\n\t\t\t\t\tsm={12}\n\t\t\t\t\tlg={12}\n\t\t\t\t\tmd={12}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\tSTATUS HISTORY\n\t\t\t\t</Grid>\n\t\t\t\t<TaskStatusHistoryListing\n\t\t\t\t\tstatus_history={status_history}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default TaskMainContent;"]},"metadata":{},"sourceType":"module"}