{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskMainContent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Grid, TextareaAutosize } from \"@mui/material\";\nimport * as React from \"react\";\nimport TaskStatusHistoryListing from \"./TaskStatusHistoryListing\";\nimport { useEffect } from \"react\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskMainContent = function () {\n  _s();\n\n  var _props$task$descripti, _props$task, _props$task$status_hi, _props$task2;\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    task: {\n      description: \"\",\n      id: null\n    },\n    update: (id, body) => {}\n  };\n  const [description, setDescription] = React.useState((_props$task$descripti = props === null || props === void 0 ? void 0 : (_props$task = props.task) === null || _props$task === void 0 ? void 0 : _props$task.description) !== null && _props$task$descripti !== void 0 ? _props$task$descripti : \"\");\n  const status_history = (_props$task$status_hi = props === null || props === void 0 ? void 0 : (_props$task2 = props.task) === null || _props$task2 === void 0 ? void 0 : _props$task2.status_history) !== null && _props$task$status_hi !== void 0 ? _props$task$status_hi : [];\n  const [timeout, setDescriptionTimeout] = React.useState(null);\n  const {\n    task = {\n      id: 0,\n      name: \"\",\n      description: \"\"\n    },\n    update = () => {}\n  } = props;\n  console.log(timeout);\n  useEffect(() => {\n    if (!timeout && description !== task.description) {// setDescriptionTimeout(setTimeout(() => {\n      // \tconsole.log(\"oi?\")\n      // }, 100));\n    } else {\n      clearTimeout(timeout);\n    }\n  }, [timeout, description, task.description]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    md: 12,\n    spacing: 2,\n    item: true,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 6,\n      sm: 6,\n      lg: 6,\n      md: 6,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 20,\n        placeholder: \"Minimum 3 rows\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 6,\n      sm: 6,\n      lg: 6,\n      md: 6,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 12,\n        lg: 12,\n        md: 12,\n        item: true,\n        container: true,\n        children: \"STATUS HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(TaskStatusHistoryListing, {\n        status_history: status_history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TaskMainContent, \"8he9E5eVRrNnfVzaadKhrfSrt1E=\");\n\n_c = TaskMainContent;\nexport default TaskMainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskMainContent\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskMainContent.js"],"names":["Grid","TextareaAutosize","React","TaskStatusHistoryListing","useEffect","TaskMainContent","props","task","description","id","update","body","setDescription","useState","status_history","timeout","setDescriptionTimeout","name","console","log","clearTimeout","e","target","value"],"mappings":";;;;AAAA,SAAQA,IAAR,EAAcC,gBAAd,QAAqC,eAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAAQC,SAAR,QAAwB,OAAxB;AAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,eAAe,GAAG,YAOL;AAAA;;AAAA;;AAAA,MAPMC,KAON,uEAPc;AAChCC,IAAAA,IAAI,EAAE;AACLC,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,EAAE,EAAE;AAFC,KAD0B;AAKhCC,IAAAA,MAAM,EAAE,CAACD,EAAD,EAAKE,IAAL,KAAc,CACrB;AAN+B,GAOd;AAClB,QAAM,CAACH,WAAD,EAAcI,cAAd,IAAgCV,KAAK,CAACW,QAAN,0BAAeP,KAAf,aAAeA,KAAf,sCAAeA,KAAK,CAAEC,IAAtB,gDAAe,YAAaC,WAA5B,yEAA2C,EAA3C,CAAtC;AACA,QAAMM,cAAc,4BAAGR,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEC,IAAV,iDAAG,aAAaO,cAAhB,yEAAkC,EAAtD;AACA,QAAM,CAACC,OAAD,EAAUC,qBAAV,IAAmCd,KAAK,CAACW,QAAN,CAAe,IAAf,CAAzC;AACA,QAAM;AACLN,IAAAA,IAAI,GAAG;AACNE,MAAAA,EAAE,EAAE,CADE;AAENQ,MAAAA,IAAI,EAAE,EAFA;AAGNT,MAAAA,WAAW,EAAE;AAHP,KADF;AAMLE,IAAAA,MAAM,GAAG,MAAM,CACd;AAPI,MAQFJ,KARJ;AAUAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAEf,QAAI,CAACW,OAAD,IAAYP,WAAW,KAAKD,IAAI,CAACC,WAArC,EAAkD,CACjD;AACA;AACA;AACM,KAJP,MAIa;AACZY,MAAAA,YAAY,CAACL,OAAD,CAAZ;AACA;AAED,GAVQ,EAUN,CACFA,OADE,EAEFP,WAFE,EAGFD,IAAI,CAACC,WAHH,CAVM,CAAT;AAgBA,sBAEC,QAAC,IAAD;AACC,IAAA,EAAE,EAAE,EADL;AAEC,IAAA,EAAE,EAAE,EAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAIC,IAAA,EAAE,EAAE,EAJL;AAKC,IAAA,OAAO,EAAE,CALV;AAMC,IAAA,IAAI,MANL;AAOC,IAAA,SAAS,MAPV;AAAA,4BASC,QAAC,IAAD;AACC,MAAA,EAAE,EAAE,CADL;AAEC,MAAA,EAAE,EAAE,CAFL;AAGC,MAAA,EAAE,EAAE,CAHL;AAIC,MAAA,EAAE,EAAE,CAJL;AAKC,MAAA,IAAI,MALL;AAAA,6BAOC,QAAC,gBAAD;AACC,sBAAW,gBADZ;AAEC,QAAA,OAAO,EAAE,EAFV;AAGC,QAAA,WAAW,EAAC,gBAHb;AAIC,QAAA,KAAK,EAAEA,WAJR;AAKC,QAAA,QAAQ,EAAGa,CAAD,IAAOT,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,aATD,eAwBC,QAAC,IAAD;AACC,MAAA,EAAE,EAAE,CADL;AAEC,MAAA,EAAE,EAAE,CAFL;AAGC,MAAA,EAAE,EAAE,CAHL;AAIC,MAAA,EAAE,EAAE,CAJL;AAKC,MAAA,IAAI,MALL;AAAA,8BAOC,QAAC,IAAD;AACC,QAAA,EAAE,EAAE,EADL;AAEC,QAAA,EAAE,EAAE,EAFL;AAGC,QAAA,EAAE,EAAE,EAHL;AAIC,QAAA,EAAE,EAAE,EAJL;AAKC,QAAA,IAAI,MALL;AAMC,QAAA,SAAS,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPD,eAiBC,QAAC,wBAAD;AACC,QAAA,cAAc,EAAET;AADjB;AAAA;AAAA;AAAA;AAAA,eAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,WAFD;AAiDA,CAxFD;;GAAMT,e;;KAAAA,e;AA0FN,eAAeA,eAAf","sourcesContent":["import {Grid, TextareaAutosize} from \"@mui/material\";\nimport * as React from \"react\";\nimport TaskStatusHistoryListing from \"./TaskStatusHistoryListing\";\nimport {useEffect} from \"react\";\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskMainContent = (props = {\n\ttask: {\n\t\tdescription: \"\",\n\t\tid: null,\n\t},\n\tupdate: (id, body) => {\n\t},\n}): JSX.Element => {\n\tconst [description, setDescription] = React.useState(props?.task?.description ?? \"\");\n\tconst status_history = props?.task?.status_history ?? [];\n\tconst [timeout, setDescriptionTimeout] = React.useState(null);\n\tconst {\n\t\ttask = {\n\t\t\tid: 0,\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t},\n\t\tupdate = () => {\n\t\t},\n\t} = props;\n\n\tconsole.log(timeout);\n\n\tuseEffect(() => {\n\n\t\tif (!timeout && description !== task.description) {\n\t\t\t// setDescriptionTimeout(setTimeout(() => {\n\t\t\t// \tconsole.log(\"oi?\")\n\t\t\t// }, 100));\n        } else {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\n\t}, [\n\t\ttimeout,\n\t\tdescription,\n\t\ttask.description,\n\t])\n\n\treturn (\n\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tlg={12}\n\t\t\tmd={12}\n\t\t\tspacing={2}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t<Grid\n\t\t\t\txs={6}\n\t\t\t\tsm={6}\n\t\t\t\tlg={6}\n\t\t\t\tmd={6}\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t<TextareaAutosize\n\t\t\t\t\taria-label=\"minimum height\"\n\t\t\t\t\tminRows={20}\n\t\t\t\t\tplaceholder=\"Minimum 3 rows\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\txs={6}\n\t\t\t\tsm={6}\n\t\t\t\tlg={6}\n\t\t\t\tmd={6}\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\txs={12}\n\t\t\t\t\tsm={12}\n\t\t\t\t\tlg={12}\n\t\t\t\t\tmd={12}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\tSTATUS HISTORY\n\t\t\t\t</Grid>\n\t\t\t\t<TaskStatusHistoryListing\n\t\t\t\t\tstatus_history={status_history}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default TaskMainContent;"]},"metadata":{},"sourceType":"module"}