{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/Test.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemTypes = {\n  BOX: 'box'\n};\n\nconst OK = _ref => {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.BOX,\n    item: {\n      name\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        alert(`You dropped ${item.name} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      handlerId: monitor.getHandlerId()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    \"data-testid\": `box-${name}`,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(OK, \"IjyI5uV8ET8oZCgEs++uqE2gplk=\", false, function () {\n  return [useDrag];\n});\n\n_c = OK;\nexport const Dustbin = () => {\n  _s2();\n\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: ItemTypes.BOX,\n    drop: () => ({\n      name: 'Dustbin'\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: isActive ? 'Release to drop' : 'Drag a box here'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Dustbin, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n\n_c2 = Dustbin;\nconst Container = /*#__PURE__*/memo(_c3 = function Container() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'hidden',\n        clear: 'both'\n      },\n      children: /*#__PURE__*/_jsxDEV(Dustbin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'hidden',\n        clear: 'both'\n      },\n      children: [/*#__PURE__*/_jsxDEV(OK, {\n        name: \"Glass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(OK, {\n        name: \"Banana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(OK, {\n        name: \"Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n});\n_c4 = Container;\n\nconst Test = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 2\n}, this);\n\n_c5 = Test;\nexport default Test;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"OK\");\n$RefreshReg$(_c2, \"Dustbin\");\n$RefreshReg$(_c3, \"Container$memo\");\n$RefreshReg$(_c4, \"Container\");\n$RefreshReg$(_c5, \"Test\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/Test.js"],"names":["DndProvider","useDrag","useDrop","HTML5Backend","memo","ItemTypes","BOX","OK","name","isDragging","drag","type","item","end","monitor","dropResult","getDropResult","alert","collect","handlerId","getHandlerId","Dustbin","canDrop","isOver","drop","accept","isActive","Container","overflow","clear","Test"],"mappings":"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","sourcesContent":["import {DndProvider, useDrag, useDrop} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport {memo} from \"react\";\n\nexport const ItemTypes = {\n\tBOX: 'box',\n}\n\n\nconst OK = ({name} ) => {\n\tconst [{isDragging}, drag] = useDrag(() => ({\n\t\ttype: ItemTypes.BOX,\n\t\titem: {name},\n\t\tend: (item, monitor) => {\n\t\t\tconst dropResult = monitor.getDropResult();\n\t\t\tif (item && dropResult) {\n\t\t\t\talert(`You dropped ${item.name} into ${dropResult.name}!`);\n\t\t\t}\n\t\t},\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t\thandlerId: monitor.getHandlerId(),\n\t\t}),\n\t}));\n\treturn (\n\t\t<div ref={drag} data-testid={`box-${name}`}>\n\t\t\t{name}\n\t\t</div>\n\t);\n}\nexport const Dustbin = () => {\n\tconst [{ canDrop, isOver }, drop] = useDrop(() => ({\n\t\taccept: ItemTypes.BOX,\n\t\tdrop: () => ({ name: 'Dustbin' }),\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: monitor.isOver(),\n\t\t\tcanDrop: monitor.canDrop(),\n\t\t}),\n\t}));\n\tconst isActive = canDrop && isOver;\n\treturn (<div ref={drop} >\n\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\n\t</div>);\n};\n\n\nconst Container = memo(function Container() {\n\treturn (\n\t\t<div>\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t\t<Dustbin />\n\t\t\t</div>\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t\t<OK name=\"Glass\"/>\n\t\t\t\t<OK name=\"Banana\"/>\n\t\t\t\t<OK name=\"Paper\"/>\n\t\t\t</div>\n\t\t</div>\n\t);\n})\n\nconst Test = () =>\n\t<div>\n\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t<Container/>\n\t\t</DndProvider>\n\t</div>\n\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}