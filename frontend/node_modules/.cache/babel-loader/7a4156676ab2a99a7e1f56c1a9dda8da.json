{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/ChangeStatusMenu.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Menu, MenuItem } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeStatusMenu = function () {\n  _s();\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    status: []\n  };\n  const reference = useRef(Math.random());\n\n  if (props.changeStatusOptionsOpen) {\n    var _props$status;\n\n    return /*#__PURE__*/_jsxDEV(Menu, {\n      open: props.changeStatusOptionsOpen,\n      onClose: () => props.component.setState({\n        changeStatusOptionsOpen: !props.changeStatusOptionsOpen\n      }),\n      id: \"anchor-el-menu\",\n      anchorEl: reference,\n      keepMounted: true,\n      children: props === null || props === void 0 ? void 0 : (_props$status = props.status) === null || _props$status === void 0 ? void 0 : _props$status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          props.update(props.taskId, {\n            status_id: s.id\n          });\n          props.component.setState({\n            changeStatusOptionsOpen: !props.changeStatusOptionsOpen\n          });\n        },\n        children: s.name\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, _this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, _this);\n  }\n\n  return [];\n};\n\n_s(ChangeStatusMenu, \"6Q+sQdFmUF4ra+mL3ZWZslXUdLk=\");\n\n_c = ChangeStatusMenu;\nexport default ChangeStatusMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeStatusMenu\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/ChangeStatusMenu.js"],"names":["Menu","MenuItem","React","useEffect","useRef","ChangeStatusMenu","props","status","reference","Math","random","changeStatusOptionsOpen","component","setState","map","s","update","taskId","status_id","id","name"],"mappings":";;;;AAAA,SAAQA,IAAR,EAAcC,QAAd,QAA6B,eAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,gBAAgB,GAAG,YAEN;AAAA;;AAAA,MAFOC,KAEP,uEAFe;AACjCC,IAAAA,MAAM,EAAE;AADyB,GAEf;AAClB,QAAMC,SAAS,GAAGJ,MAAM,CAACK,IAAI,CAACC,MAAL,EAAD,CAAxB;;AAEA,MAAIJ,KAAK,CAACK,uBAAV,EAAmC;AAAA;;AAClC,wBACC,QAAC,IAAD;AACC,MAAA,IAAI,EAAEL,KAAK,CAACK,uBADb;AAEC,MAAA,OAAO,EAAE,MAAML,KAAK,CAACM,SAAN,CAAgBC,QAAhB,CAAyB;AACvCF,QAAAA,uBAAuB,EAAE,CAACL,KAAK,CAACK;AADO,OAAzB,CAFhB;AAKC,MAAA,EAAE,EAAE,gBALL;AAMC,MAAA,QAAQ,EAAEH,SANX;AAOC,MAAA,WAAW,MAPZ;AAAA,gBAUEF,KAVF,aAUEA,KAVF,wCAUEA,KAAK,CAAEC,MAVT,kDAUE,cAAeO,GAAf,CAAmBC,CAAC,iBACnB,QAAC,QAAD;AAEC,QAAA,OAAO,EAAE,MAAM;AACdT,UAAAA,KAAK,CAACU,MAAN,CAAaV,KAAK,CAACW,MAAnB,EAA2B;AAC1BC,YAAAA,SAAS,EAAEH,CAAC,CAACI;AADa,WAA3B;AAGAb,UAAAA,KAAK,CAACM,SAAN,CAAgBC,QAAhB,CAAyB;AACxBF,YAAAA,uBAAuB,EAAE,CAACL,KAAK,CAACK;AADR,WAAzB;AAGA,SATF;AAAA,kBAWEI,CAAC,CAACK;AAXJ,SACML,CAAC,CAACI,EADR;AAAA;AAAA;AAAA;AAAA,eADD;AAVF;AAAA;AAAA;AAAA;AAAA,aADD;AA6BA;;AAED,SAAO,EAAP;AACA,CAtCD;;GAAMd,gB;;KAAAA,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import {Menu, MenuItem} from \"@mui/material\";\nimport * as React from \"react\";\nimport {useEffect, useRef} from \"react\";\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst ChangeStatusMenu = (props = {\n\tstatus: [],\n}): JSX.Element => {\n\tconst reference = useRef(Math.random());\n\n\tif (props.changeStatusOptionsOpen) {\n\t\treturn (\n\t\t\t<Menu\n\t\t\t\topen={props.changeStatusOptionsOpen}\n\t\t\t\tonClose={() => props.component.setState({\n\t\t\t\t\tchangeStatusOptionsOpen: !props.changeStatusOptionsOpen\n\t\t\t\t})}\n\t\t\t\tid={\"anchor-el-menu\"}\n\t\t\t\tanchorEl={reference}\n\t\t\t\tkeepMounted\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tprops?.status?.map(s =>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tprops.update(props.taskId, {\n\t\t\t\t\t\t\t\t\tstatus_id: s.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tprops.component.setState({\n\t\t\t\t\t\t\t\t\tchangeStatusOptionsOpen: !props.changeStatusOptionsOpen\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Menu>\n\t\t);\n\t}\n\n\treturn [];\n}\n\nexport default ChangeStatusMenu;"]},"metadata":{},"sourceType":"module"}