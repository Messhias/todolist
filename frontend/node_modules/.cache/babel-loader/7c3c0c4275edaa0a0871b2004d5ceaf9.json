{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/TaskListTableBody.js\",\n    _this = this;\n\nimport { Button, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport * as React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n/**\n * @param task\n * @param actualStatus\n * @param props\n * @returns {JSX.Element}\n * @private\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst _renderCommonColumns = function () {\n  let task = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    id: null,\n    name: \"\",\n    is_closed: false,\n    status: {\n      name: \"\"\n    },\n    formatted_created_date: \"\",\n    deadline: \"\"\n  };\n  let actualStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    name: \"\"\n  };\n  let props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: task === null || task === void 0 ? void 0 : task.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: task === null || task === void 0 ? void 0 : task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: (task === null || task === void 0 ? void 0 : task.is_closed) ? \"Closed\" : \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: actualStatus === null || actualStatus === void 0 ? void 0 : actualStatus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: task === null || task === void 0 ? void 0 : task.deadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      onClick: () => {\n        props === null || props === void 0 ? void 0 : props.handleChangeModal(props.taskModalOpen);\n        props.find(task.id);\n      },\n      children: task === null || task === void 0 ? void 0 : task.formatted_created_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n/**\n * @param task\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @returns {JSX.Element}\n * @private\n */\n\n\nconst _renderActionButtons = (task, status, changeStatusOptionsOpen, props) => {\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"delete-button\",\n      id: task.id,\n      \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n      onClick: () => props.erase(task.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param tasks\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @param actualStatus\n * @returns {JSX.Element|*}\n * @private\n */\n\n\nconst _renderTasks = (tasks, status, changeStatusOptionsOpen, props, actualStatus) => {\n  if (tasks.length > 0) {\n    return tasks.map(t => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        \"data-id\": t.id,\n        children: [_renderCommonColumns(t, actualStatus, props), _renderActionButtons(t, status, changeStatusOptionsOpen, props)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: /*#__PURE__*/_jsxDEV(TableCell, {\n      colSpan: 6,\n      children: \"NO TASKS FOUND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nconst TaskListTableBody = props => {\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: _renderTasks(props.s.tasks, props.status, props.changeStatusOptionsOpen, props, props.s)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TaskListTableBody;\nexport default TaskListTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListTableBody\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/TaskListTableBody.js"],"names":["Button","TableBody","TableCell","TableRow","React","DeleteIcon","_renderCommonColumns","task","id","name","is_closed","status","formatted_created_date","deadline","actualStatus","props","handleChangeModal","taskModalOpen","find","_renderActionButtons","changeStatusOptionsOpen","undefined","erase","_renderTasks","tasks","length","map","t","TaskListTableBody","s"],"mappings":"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","sourcesContent":["import {Button, TableBody, TableCell, TableRow} from \"@mui/material\";\nimport * as React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\n/**\n * @param task\n * @param actualStatus\n * @param props\n * @returns {JSX.Element}\n * @private\n */\nconst _renderCommonColumns = (task = {\n\tid: null,\n\tname: \"\",\n\tis_closed: false,\n\tstatus: {\n\t\tname: \"\",\n\t},\n\tformatted_created_date: \"\",\n\tdeadline: \"\",\n}, actualStatus = {\n\tname: \"\",\n}, props = {}): JSX.Element => (\n\t<>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{task?.id}\n\t\t</TableCell>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{task?.name}\n\t\t</TableCell>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{task?.is_closed ? \"Closed\" : \"Open\"}\n\t\t</TableCell>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{actualStatus?.name}\n\t\t</TableCell>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{task?.deadline}\n\t\t</TableCell>\n\t\t<TableCell\n\t\t\tonClick={() => {\n\t\t\t\tprops?.handleChangeModal(props.taskModalOpen);\n\t\t\t\tprops.find(task.id);\n\t\t\t}}\n\t\t>\n\t\t\t{task?.formatted_created_date}\n\t\t</TableCell>\n\t</>\n);\n\n\n/**\n * @param task\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @returns {JSX.Element}\n * @private\n */\nconst _renderActionButtons = (task, status, changeStatusOptionsOpen, props): JSX.Element => {\n\treturn (\n\t\t<TableCell>\n\t\t\t<Button\n\t\t\t\tclassName={\"delete-button\"}\n\t\t\t\tid={task.id}\n\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\tonClick={() => props.erase(task.id)}\n\t\t\t>\n\t\t\t\t<DeleteIcon/>\n\t\t\t</Button>\n\t\t</TableCell>\n\t);\n}\n\n/**\n * @param tasks\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @param actualStatus\n * @returns {JSX.Element|*}\n * @private\n */\nconst _renderTasks = (tasks, status, changeStatusOptionsOpen, props, actualStatus): JSX.Element | * => {\n\n\tif (tasks.length > 0) {\n\t\treturn tasks.map((t) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tkey={t.id}\n\t\t\t\t\tdata-id={t.id}\n\t\t\t\t>\n\t\t\t\t\t{_renderCommonColumns(t, actualStatus, props)}\n\t\t\t\t\t{_renderActionButtons(t, status, changeStatusOptionsOpen, props)}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<TableRow>\n\t\t\t<TableCell colSpan={6}>\n\t\t\t\tNO TASKS FOUND\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t)\n}\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskListTableBody = (props): JSX.Element => {\n\treturn (\n\t\t<TableBody>\n\t\t\t{_renderTasks(props.s.tasks, props.status, props.changeStatusOptionsOpen, props, props.s)}\n\t\t</TableBody>\n\t);\n}\n\nexport default TaskListTableBody;"]},"metadata":{},"sourceType":"module"}