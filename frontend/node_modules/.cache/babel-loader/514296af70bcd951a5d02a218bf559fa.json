{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\nvar _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/MainPage.js\";\nimport { Grid, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { erase, get, update } from \"../actions/Tasks\";\nimport { get as getStatus } from '../actions/Status';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _renderCommonColumns = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderCommonColumns\");\n\nvar _renderActionButtons = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderActionButtons\");\n\nvar _renderTasks = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderTasks\");\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    Object.defineProperty(this, _renderCommonColumns, {\n      writable: true,\n      value: (task = {\n        id: null,\n        name: \"\",\n        is_closed: false,\n        status: {\n          name: \"\"\n        },\n        formatted_created_date: \"\"\n      }) => {\n        var _task$status;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: (task === null || task === void 0 ? void 0 : task.is_closed) ? \"Closed\" : \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : (_task$status = task.status) === null || _task$status === void 0 ? void 0 : _task$status.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : task.formatted_created_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true);\n      }\n    });\n    Object.defineProperty(this, _renderActionButtons, {\n      writable: true,\n      value: (task, status, changeStatusOptionsOpen) => {\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: task.id,\n            \"aria-controls\": \"basic-menu\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => {\n              this.props.getStatus();\n              this.setState({\n                changeStatusOptionsOpen: !changeStatusOptionsOpen,\n                taskId: task.id\n              });\n            },\n            children: \"CHANGE STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: task.id,\n            \"aria-controls\": \"basic-menu\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => this.props.erase(task.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }, this);\n      }\n    });\n    Object.defineProperty(this, _renderTasks, {\n      writable: true,\n      value: (tasks, status, changeStatusOptionsOpen) => {\n        if (tasks.length > 0) {\n          return tasks.map(t => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [_classPrivateFieldLooseBase(this, _renderCommonColumns)[_renderCommonColumns](t), _classPrivateFieldLooseBase(this, _renderActionButtons)[_renderActionButtons](t, status, changeStatusOptionsOpen)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 5\n          }, this));\n        }\n\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6,\n            children: \"NO TASKS FOUND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 4\n        }, this);\n      }\n    });\n    this.state = {\n      changeStatusOptionsOpen: false,\n      taskId: null\n    };\n    this.props.get();\n  }\n  /**\n   * @param task\n   * @returns {JSX.Element}\n   * @private\n   */\n\n\n  render() {\n    const {\n      tasks = [],\n      status = []\n    } = this.props,\n          {\n      changeStatusOptionsOpen = false,\n      taskId = null\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 12,\n        lg: 12,\n        md: 12,\n        item: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => this.props.history.push(\"/tasks/add\"),\n          children: \"ADD NEW TASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Closed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"CREATE DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: _classPrivateFieldLooseBase(this, _renderTasks)[_renderTasks](tasks, status, changeStatusOptionsOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          keepMounted: true,\n          open: changeStatusOptionsOpen,\n          onClose: () => this.setState({\n            changeStatusOptionsOpen: !changeStatusOptionsOpen\n          }),\n          children: status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              this.props.update(taskId, {\n                status_id: s.id\n              });\n              this.setState({\n                changeStatusOptionsOpen: !changeStatusOptionsOpen\n              });\n            },\n            children: s.name\n          }, s.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    StatusStore,\n    TasksStore\n  } = state;\n  return { ...StatusStore,\n    ...TasksStore\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  get: () => dispatch(get([\"status\"])),\n  getStatus: () => dispatch(getStatus()),\n  update: (id, body) => dispatch(update(id, body)),\n  erase: id => dispatch(erase(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/MainPage.js"],"names":["Grid","Table","TableBody","TableCell","TableHead","TableRow","Button","Menu","MenuItem","React","connect","erase","get","update","getStatus","DeleteIcon","HeaderMenu","MainPage","Component","constructor","props","task","id","name","is_closed","status","formatted_created_date","changeStatusOptionsOpen","undefined","setState","taskId","tasks","length","map","t","state","render","history","push","s","status_id","mapStateToProps","StatusStore","TasksStore","mapDispatchToProps","dispatch","body"],"mappings":"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","sourcesContent":["import {Grid, Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {erase, get, update} from \"../actions/Tasks\";\nimport {get as getStatus} from '../actions/Status';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HeaderMenu from \"../components/HeaderMenu\";\n\nclass MainPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchangeStatusOptionsOpen: false,\n\t\t\ttaskId: null,\n\t\t};\n\t\tthis.props.get();\n\t}\n\n\t/**\n\t * @param task\n\t * @returns {JSX.Element}\n\t * @private\n\t */\n\t#_renderCommonColumns = (task = {\n\t\tid: null,\n\t\tname: \"\",\n\t\tis_closed: false,\n\t\tstatus: {\n\t\t\tname: \"\",\n\t\t},\n\t\tformatted_created_date: \"\",\n\t}): JSX.Element => (\n\t\t<>\n\t\t\t<TableCell>\n\t\t\t\t{task?.id}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.is_closed ? \"Closed\" : \"Open\"}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.status?.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.formatted_created_date}\n\t\t\t</TableCell>\n\t\t</>\n\t);\n\n\t#_renderActionButtons = (task, status, changeStatusOptionsOpen) => {\n\t\treturn (\n\t\t\t<TableCell>\n\t\t\t\t<Button\n\t\t\t\t\tid={task.id}\n\t\t\t\t\taria-controls=\"basic-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.getStatus();\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen,\n\t\t\t\t\t\t\ttaskId: task.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCHANGE STATUS\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tid={task.id}\n\t\t\t\t\taria-controls=\"basic-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => this.props.erase(task.id)}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon />\n\t\t\t\t</Button>\n\t\t\t</TableCell>\n\t\t);\n\t}\n\n\t#_renderTasks = (tasks, status, changeStatusOptionsOpen) => {\n\n\t\tif (tasks.length > 0) {\n\t\t\treturn tasks.map((t) =>\n\t\t\t\t<TableRow key={t.id}>\n\t\t\t\t\t{this.#_renderCommonColumns(t)}\n\t\t\t\t\t{this.#_renderActionButtons(t, status, changeStatusOptionsOpen)}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell colSpan={6}>\n\t\t\t\t\tNO TASKS FOUND\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t\ttasks = [],\n\t\t\t\tstatus = [],\n\t\t\t} = this.props,\n\t\t\t{\n\t\t\t\tchangeStatusOptionsOpen = false,\n\t\t\t\ttaskId = null,\n\t\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<HeaderMenu history={this.props.history} />\n\t\t\t\t<Grid\n\t\t\t\t\txs={12}\n\t\t\t\t\tsm={12}\n\t\t\t\t\tlg={12}\n\t\t\t\t\tmd={12}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\t\tonClick={() => this.props.history.push(\"/tasks/add\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tADD NEW TASK\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tID\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tClosed\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tCREATE DATE\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tACTIONS\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{this.#_renderTasks(tasks, status, changeStatusOptionsOpen)}\n\t\t\t\t\t</TableBody>\n\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\topen={changeStatusOptionsOpen}\n\t\t\t\t\t\tonClose={() => this.setState({\n\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus.map(s =>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.props.update(taskId, {\n\t\t\t\t\t\t\t\t\t\t\tstatus_id: s.id,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Table>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst {\n\t\tStatusStore,\n\t\tTasksStore,\n\t} = state;\n\n\treturn {\n\t\t...StatusStore,\n\t\t...TasksStore,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tget: () => dispatch(get([\n\t\t\"status\",\n\t])),\n\tgetStatus: () => dispatch(getStatus()),\n\tupdate: (id, body) => dispatch(update(id, body)),\n\terase: (id) => dispatch(erase(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n"]},"metadata":{},"sourceType":"module"}