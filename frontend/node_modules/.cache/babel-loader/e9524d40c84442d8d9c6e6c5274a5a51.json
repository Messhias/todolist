{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/TaskListTableBody.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport * as React from \"react\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../../../Pages/Test\";\n/**\n * @param task\n * @param actualStatus\n * @returns {JSX.Element}\n * @private\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst _renderCommonColumns = (task = {\n  id: null,\n  name: \"\",\n  is_closed: false,\n  status: {\n    name: \"\"\n  },\n  formatted_created_date: \"\",\n  deadline: \"\"\n}, actualStatus = {\n  name: \"\"\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n    children: task === null || task === void 0 ? void 0 : task.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    children: task === null || task === void 0 ? void 0 : task.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    children: (task === null || task === void 0 ? void 0 : task.is_closed) ? \"Closed\" : \"Open\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    children: actualStatus === null || actualStatus === void 0 ? void 0 : actualStatus.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    children: task === null || task === void 0 ? void 0 : task.deadline\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    children: task === null || task === void 0 ? void 0 : task.formatted_created_date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this)]\n}, void 0, true);\n/**\n * @param task\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @returns {JSX.Element}\n * @private\n */\n\n\nconst _renderActionButtons = (task, status, changeStatusOptionsOpen, props) => {\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: task.id,\n      \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n      onClick: () => {\n        props.getStatus();\n        props.component.setState({\n          changeStatusOptionsOpen: !changeStatusOptionsOpen,\n          taskId: task.id\n        });\n      },\n      children: \"CHANGE STATUS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: task.id,\n      \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n      onClick: () => props.history.push(`/tasks/edit/${task.id}`),\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"delete-button\",\n      id: task.id,\n      \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n      onClick: () => props.erase(task.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param tasks\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @param actualStatus\n * @returns {JSX.Element|*}\n * @private\n */\n\n\nconst _renderTasks = (tasks, status, changeStatusOptionsOpen, props, actualStatus) => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.BOX,\n    item: props.s.name,\n    end: (item, monitor) => {\n      console.log(item.name, monitor);\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        alert(`You dropped ${item.name} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      handlerId: monitor.getHandlerId()\n    })\n  }));\n\n  if (tasks.length > 0) {\n    return tasks.map(t => {\n      drag.item = t.id;\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        ref: drag,\n        children: [_renderCommonColumns(t, actualStatus), _renderActionButtons(t, status, changeStatusOptionsOpen, props)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: /*#__PURE__*/_jsxDEV(TableCell, {\n      colSpan: 6,\n      children: \"NO TASKS FOUND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n};\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\n_s(_renderTasks, \"IjyI5uV8ET8oZCgEs++uqE2gplk=\", false, function () {\n  return [useDrag];\n});\n\nconst TaskListTableBody = props => {\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: _renderTasks(props.s.tasks, props.status, props.changeStatusOptionsOpen, props, props.s)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TaskListTableBody;\nexport default TaskListTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListTableBody\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/MainPage/Table/TaskListTableBody.js"],"names":["Button","TableBody","TableCell","TableRow","React","EditIcon","DeleteIcon","useDrag","ItemTypes","_renderCommonColumns","task","id","name","is_closed","status","formatted_created_date","deadline","actualStatus","_renderActionButtons","changeStatusOptionsOpen","props","undefined","getStatus","component","setState","taskId","history","push","erase","_renderTasks","tasks","isDragging","drag","type","BOX","item","s","end","monitor","console","log","dropResult","getDropResult","alert","collect","handlerId","getHandlerId","length","map","t","TaskListTableBody"],"mappings":"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","sourcesContent":["import {Button, TableBody, TableCell, TableRow} from \"@mui/material\";\nimport * as React from \"react\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {useDrag} from \"react-dnd\";\nimport {ItemTypes} from \"../../../Pages/Test\";\n\n\n/**\n * @param task\n * @param actualStatus\n * @returns {JSX.Element}\n * @private\n */\nconst _renderCommonColumns = (task = {\n\tid: null,\n\tname: \"\",\n\tis_closed: false,\n\tstatus: {\n\t\tname: \"\",\n\t},\n\tformatted_created_date: \"\",\n\tdeadline: \"\",\n}, actualStatus = {\n\tname: \"\",\n}): JSX.Element => (\n\t<>\n\t\t<TableCell>\n\t\t\t{task?.id}\n\t\t</TableCell>\n\t\t<TableCell>\n\t\t\t{task?.name}\n\t\t</TableCell>\n\t\t<TableCell>\n\t\t\t{task?.is_closed ? \"Closed\" : \"Open\"}\n\t\t</TableCell>\n\t\t<TableCell>\n\t\t\t{actualStatus?.name}\n\t\t</TableCell>\n\t\t<TableCell>\n\t\t\t{task?.deadline}\n\t\t</TableCell>\n\t\t<TableCell>\n\t\t\t{task?.formatted_created_date}\n\t\t</TableCell>\n\t</>\n);\n\n\n/**\n * @param task\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @returns {JSX.Element}\n * @private\n */\nconst _renderActionButtons = (task, status, changeStatusOptionsOpen, props): JSX.Element => {\n\treturn (\n\t\t<TableCell>\n\t\t\t<Button\n\t\t\t\tid={task.id}\n\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.getStatus();\n\t\t\t\t\tprops.component.setState({\n\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen,\n\t\t\t\t\t\ttaskId: task.id,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCHANGE STATUS\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tid={task.id}\n\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\tonClick={() => props.history.push(`/tasks/edit/${task.id}`)}\n\t\t\t>\n\t\t\t\t<EditIcon/>\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tclassName={\"delete-button\"}\n\t\t\t\tid={task.id}\n\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\tonClick={() => props.erase(task.id)}\n\t\t\t>\n\t\t\t\t<DeleteIcon/>\n\t\t\t</Button>\n\t\t</TableCell>\n\t);\n}\n\n/**\n * @param tasks\n * @param status\n * @param changeStatusOptionsOpen\n * @param props\n * @param actualStatus\n * @returns {JSX.Element|*}\n * @private\n */\nconst _renderTasks = (tasks, status, changeStatusOptionsOpen, props, actualStatus): JSX.Element | * => {\n\n\tconst [{isDragging}, drag] = useDrag(() => ({\n\t\ttype: ItemTypes.BOX,\n\t\titem: props.s.name,\n\t\tend: (item, monitor) => {\n\t\t\tconsole.log(item.name, monitor);\n\t\t\tconst dropResult = monitor.getDropResult();\n\t\t\tif (item && dropResult) {\n\t\t\t\talert(`You dropped ${item.name} into ${dropResult.name}!`);\n\t\t\t}\n\t\t},\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t\thandlerId: monitor.getHandlerId(),\n\t\t}),\n\t}));\n\tif (tasks.length > 0) {\n\t\treturn tasks.map((t) => {\n\t\t\tdrag.item = t.id;\n\t\t\treturn (\n\t\t\t\t<TableRow key={t.id} ref={drag}>\n\t\t\t\t\t{_renderCommonColumns(t, actualStatus)}\n\t\t\t\t\t{_renderActionButtons(t, status, changeStatusOptionsOpen, props)}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<TableRow>\n\t\t\t<TableCell colSpan={6}>\n\t\t\t\tNO TASKS FOUND\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t)\n}\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskListTableBody = (props): JSX.Element => {\n\treturn (\n\t\t<TableBody>\n\t\t\t{_renderTasks(props.s.tasks, props.status, props.changeStatusOptionsOpen, props, props.s)}\n\t\t</TableBody>\n\t);\n}\n\nexport default TaskListTableBody;"]},"metadata":{},"sourceType":"module"}