{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Status/AddNewStatusForm.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Grid, OutlinedInput } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmptyObject } from \"../../utils/Helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst showErrors = (status_errors = {}) => {\n  if (!isEmptyObject(status_errors)) {\n    const view = [];\n\n    for (var key in status_errors) {\n      if (status_errors[key].length > 0) {\n        status_errors[key].forEach(s => view.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }, this)));\n      }\n\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: view\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  return [];\n};\n\nconst AddNewStatusForm = (props = {\n  create: () => {},\n  status_errors: {}\n}) => {\n  _s();\n\n  const [name, handleNameChange] = useState(\"\");\n  useEffect(() => false, [props.status_errors]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    lg: 12,\n    sm: 12,\n    md: 12,\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        onChange: event => {\n          handleNameChange(event.target.value);\n        },\n        placeholder: \"Status name\",\n        label: \"Status name\",\n        name: \"name\",\n        id: \"name\",\n        defaultValue: name,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), showErrors(props.status_errors), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => props.create({\n          name\n        }),\n        disabled: name === \"\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddNewStatusForm, \"Api4x1DTmRpSIzBkcn5OaDjjzZo=\");\n\n_c = AddNewStatusForm;\nAddNewStatusForm.propTypes = {\n  create: PropTypes.func.isRequired,\n  status_errors: PropTypes.any\n};\nexport default AddNewStatusForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewStatusForm\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Status/AddNewStatusForm.js"],"names":["FormControl","Grid","OutlinedInput","Button","React","useEffect","useState","PropTypes","isEmptyObject","showErrors","status_errors","view","key","length","forEach","s","push","AddNewStatusForm","props","create","name","handleNameChange","event","target","value","propTypes","func","isRequired","any"],"mappings":"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","sourcesContent":["import {FormControl, Grid, OutlinedInput} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {isEmptyObject} from \"../../utils/Helpers\";\n\n\nconst showErrors = (status_errors = {}) => {\n\tif (!isEmptyObject(status_errors)) {\n\t\tconst view = [];\n\t\tfor (var key in status_errors) {\n\t\t\tif (status_errors[key].length > 0) {\n\t\t\t\tstatus_errors[key].forEach(s =>\n\t\t\t\t\tview.push(\n\t\t\t\t\t\t<li key={s}>\n\t\t\t\t\t\t\t{s}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<FormControl\n\t\t\t\t\tfullWidth\n\t\t\t\t>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{view}\n\t\t\t\t\t</ul>\n\t\t\t\t</FormControl>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn []\n}\n\nconst AddNewStatusForm = (props = {\n\tcreate: () => {},\n\tstatus_errors: {},\n}) => {\n\tconst [name, handleNameChange] = useState(\"\");\n\n\tuseEffect(() => false, [\n\t\tprops.status_errors,\n\t]);\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tlg={12}\n\t\t\tsm={12}\n\t\t\tmd={12}\n\t\t\titem\n\t\t>\n\t\t\t<FormControl\n\t\t\t\tvariant={\"outlined\"}\n\t\t\t\tfullWidth\n\t\t\t>\n\t\t\t\t<OutlinedInput\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\thandleNameChange(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder={\"Status name\"}\n\t\t\t\t\tlabel={\"Status name\"}\n\t\t\t\t\tname={\"name\"}\n\t\t\t\t\tid={\"name\"}\n\t\t\t\t\tdefaultValue={name}\n\t\t\t\t\tfullWidth\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t{showErrors(props.status_errors)}\n\t\t\t<FormControl\n\t\t\t\tvariant={\"outlined\"}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\tonClick={() => props.create({\n\t\t\t\t\t\tname,\n\t\t\t\t\t})}\n\t\t\t\t\tdisabled={name === \"\"}\n\t\t\t\t>\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</FormControl>\n\t\t</Grid>\n\t);\n}\n\nAddNewStatusForm.propTypes = {\n\tcreate: PropTypes.func.isRequired,\n\tstatus_errors: PropTypes.any,\n}\n\nexport default AddNewStatusForm;"]},"metadata":{},"sourceType":"module"}