{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"/Users/collegia/Documents/projects/todolist/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\nvar _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/Pages/MainPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { erase, get, update } from \"../actions/Tasks\";\nimport { get as getStatus } from '../actions/Status';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport { Button, Grid, Menu, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _renderCommonColumns = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderCommonColumns\");\n\nvar _renderActionButtons = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderActionButtons\");\n\nvar _renderTasks = /*#__PURE__*/_classPrivateFieldLooseKey(\"_renderTasks\");\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    Object.defineProperty(this, _renderCommonColumns, {\n      writable: true,\n      value: (task = {\n        id: null,\n        name: \"\",\n        is_closed: false,\n        status: {\n          name: \"\"\n        },\n        formatted_created_date: \"\"\n      }) => {\n        var _task$task, _task$task2, _task$task2$status;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : (_task$task = task.task) === null || _task$task === void 0 ? void 0 : _task$task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: (task === null || task === void 0 ? void 0 : task.is_closed) ? \"Closed\" : \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : (_task$task2 = task.task) === null || _task$task2 === void 0 ? void 0 : (_task$task2$status = _task$task2.status) === null || _task$task2$status === void 0 ? void 0 : _task$task2$status.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task === null || task === void 0 ? void 0 : task.formatted_created_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true);\n      }\n    });\n    Object.defineProperty(this, _renderActionButtons, {\n      writable: true,\n      value: (task, status, changeStatusOptionsOpen) => {\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: task.id,\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => {\n              this.props.getStatus();\n              this.setState({\n                changeStatusOptionsOpen: !changeStatusOptionsOpen,\n                taskId: task.id\n              });\n            },\n            children: \"CHANGE STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: task.id,\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => this.props.history.push(`/tasks/edit/${task.id}`),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"delete-button\",\n            id: task.id,\n            \"aria-expanded\": changeStatusOptionsOpen ? 'true' : undefined,\n            onClick: () => this.props.erase(task.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 4\n        }, this);\n      }\n    });\n    Object.defineProperty(this, _renderTasks, {\n      writable: true,\n      value: (tasks, status, changeStatusOptionsOpen) => {\n        if (tasks.length > 0) {\n          return tasks.map(t => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [_classPrivateFieldLooseBase(this, _renderCommonColumns)[_renderCommonColumns](t), _classPrivateFieldLooseBase(this, _renderActionButtons)[_renderActionButtons](t, status, changeStatusOptionsOpen)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 5\n          }, this));\n        }\n\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6,\n            children: \"NO TASKS FOUND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 4\n        }, this);\n      }\n    });\n    this.state = {\n      changeStatusOptionsOpen: false,\n      taskId: null\n    };\n    this.props.get();\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_ID, {\n      cluster: 'eu'\n    });\n    this.pusher.logToConsole = true;\n  }\n\n  componentDidMount() {\n    this.pusher.subscribe('my-channel').bind('my-event', () => this.props.get());\n  }\n  /**\n   * @param task\n   * @returns {JSX.Element}\n   * @private\n   */\n\n\n  render() {\n    const {\n      tasks = [],\n      status = []\n    } = this.props,\n          {\n      changeStatusOptionsOpen = false,\n      taskId = null\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      id: \"main-page-container\",\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      md: 12,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"main-page-buttons-container\",\n        xs: 12,\n        sm: 12,\n        lg: 12,\n        md: 12,\n        item: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => this.props.history.push(\"/tasks/add\"),\n          children: \"ADD NEW TASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Closed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"CREATE DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ACTIONS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: _classPrivateFieldLooseBase(this, _renderTasks)[_renderTasks](tasks, status, changeStatusOptionsOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            keepMounted: true,\n            open: changeStatusOptionsOpen,\n            onClose: () => this.setState({\n              changeStatusOptionsOpen: !changeStatusOptionsOpen\n            }),\n            children: status.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: () => {\n                this.props.update(taskId, {\n                  status_id: s.id\n                });\n                this.setState({\n                  changeStatusOptionsOpen: !changeStatusOptionsOpen\n                });\n              },\n              children: s.name\n            }, s.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    StatusStore,\n    TasksStore\n  } = state;\n  return { ...StatusStore,\n    ...TasksStore\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  get: () => dispatch(get([\"status\"])),\n  getStatus: () => dispatch(getStatus()),\n  update: (id, body) => dispatch(update(id, body)),\n  erase: id => dispatch(erase(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/Pages/MainPage.js"],"names":["React","connect","erase","get","update","getStatus","DeleteIcon","EditIcon","HeaderMenu","Button","Grid","Menu","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Pusher","MainPage","Component","constructor","props","task","id","name","is_closed","status","formatted_created_date","changeStatusOptionsOpen","undefined","setState","taskId","history","push","tasks","length","map","t","state","pusher","process","env","REACT_APP_PUSHER_ID","cluster","logToConsole","componentDidMount","subscribe","bind","render","s","status_id","mapStateToProps","StatusStore","TasksStore","mapDispatchToProps","dispatch","body"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,GAAf,EAAoBC,MAApB,QAAiC,kBAAjC;AACA,SAAQD,GAAG,IAAIE,SAAf,QAA+B,mBAA/B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACCC,MADD,EAECC,IAFD,EAGCC,IAHD,EAICC,QAJD,EAKCC,KALD,EAMCC,SAND,EAOCC,SAPD,EAQCC,cARD,EASCC,SATD,EAUCC,QAVD,QAWO,eAXP;AAYA,OAAOC,MAAP,MAAmB,WAAnB;;;;;;;;;;AAGA,MAAMC,QAAN,SAAuBpB,KAAK,CAACqB,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB;AAAA;AAAA,aAuBK,CAACC,IAAI,GAAG;AAC/BC,QAAAA,EAAE,EAAE,IAD2B;AAE/BC,QAAAA,IAAI,EAAE,EAFyB;AAG/BC,QAAAA,SAAS,EAAE,KAHoB;AAI/BC,QAAAA,MAAM,EAAE;AACPF,UAAAA,IAAI,EAAE;AADC,SAJuB;AAO/BG,QAAAA,sBAAsB,EAAE;AAPO,OAAR;AAAA;;AAAA,4BASvB;AAAA,kCACC,QAAC,SAAD;AAAA,sBACEL,IADF,aACEA,IADF,uBACEA,IAAI,CAAEC;AADR;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC,QAAC,SAAD;AAAA,sBACED,IADF,aACEA,IADF,qCACEA,IAAI,CAAEA,IADR,+CACE,WAAYE;AADd;AAAA;AAAA;AAAA;AAAA,kBAJD,eAOC,QAAC,SAAD;AAAA,sBACE,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,SAAN,IAAkB,QAAlB,GAA6B;AAD/B;AAAA;AAAA;AAAA;AAAA,kBAPD,eAUC,QAAC,SAAD;AAAA,sBACEH,IADF,aACEA,IADF,sCACEA,IAAI,CAAEA,IADR,sEACE,YAAYI,MADd,uDACE,mBAAoBF;AADtB;AAAA;AAAA;AAAA;AAAA,kBAVD,eAaC,QAAC,SAAD;AAAA,sBACEF,IADF,aACEA,IADF,uBACEA,IAAI,CAAEK;AADR;AAAA;AAAA;AAAA;AAAA,kBAbD;AAAA,wBATuB;AAAA;AAvBL;AAAA;AAAA;AAAA,aAmDK,CAACL,IAAD,EAAOI,MAAP,EAAeE,uBAAf,KAA2C;AAClE,4BACC,QAAC,SAAD;AAAA,kCACC,QAAC,MAAD;AACC,YAAA,EAAE,EAAEN,IAAI,CAACC,EADV;AAEC,6BAAeK,uBAAuB,GAAG,MAAH,GAAYC,SAFnD;AAGC,YAAA,OAAO,EAAE,MAAM;AACd,mBAAKR,KAAL,CAAWlB,SAAX;AACA,mBAAK2B,QAAL,CAAc;AACbF,gBAAAA,uBAAuB,EAAE,CAACA,uBADb;AAEbG,gBAAAA,MAAM,EAAET,IAAI,CAACC;AAFA,eAAd;AAIA,aATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAcC,QAAC,MAAD;AACC,YAAA,EAAE,EAAED,IAAI,CAACC,EADV;AAEC,6BAAeK,uBAAuB,GAAG,MAAH,GAAYC,SAFnD;AAGC,YAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAyB,eAAcX,IAAI,CAACC,EAAG,EAA/C,CAHhB;AAAA,mCAKC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,kBAdD,eAqBC,QAAC,MAAD;AACC,YAAA,SAAS,EAAE,eADZ;AAEC,YAAA,EAAE,EAAED,IAAI,CAACC,EAFV;AAGC,6BAAeK,uBAAuB,GAAG,MAAH,GAAYC,SAHnD;AAIC,YAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWrB,KAAX,CAAiBsB,IAAI,CAACC,EAAtB,CAJhB;AAAA,mCAMC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,kBArBD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAgCA;AApFkB;AAAA;AAAA;AAAA,aAsFH,CAACW,KAAD,EAAQR,MAAR,EAAgBE,uBAAhB,KAA4C;AAE3D,YAAIM,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACrB,iBAAOD,KAAK,CAACE,GAAN,CAAWC,CAAD,iBAChB,QAAC,QAAD;AAAA,mDACE,IADF,8CAC6BA,CAD7B,+BAEE,IAFF,8CAE6BA,CAF7B,EAEgCX,MAFhC,EAEwCE,uBAFxC;AAAA,aAAeS,CAAC,CAACd,EAAjB;AAAA;AAAA;AAAA;AAAA,kBADM,CAAP;AAMA;;AAED,4BACC,QAAC,QAAD;AAAA,iCACC,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAOA;AAxGkB;AAElB,SAAKe,KAAL,GAAa;AACZV,MAAAA,uBAAuB,EAAE,KADb;AAEZG,MAAAA,MAAM,EAAE;AAFI,KAAb;AAIA,SAAKV,KAAL,CAAWpB,GAAX;AACA,SAAKsC,MAAL,GAAc,IAAItB,MAAJ,CAAWuB,OAAO,CAACC,GAAR,CAAYC,mBAAvB,EAA4C;AACzDC,MAAAA,OAAO,EAAE;AADgD,KAA5C,CAAd;AAGA,SAAKJ,MAAL,CAAYK,YAAZ,GAA2B,IAA3B;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKN,MAAL,CAAYO,SAAZ,CAAsB,YAAtB,EACEC,IADF,CACO,UADP,EACmB,MAAM,KAAK1B,KAAL,CAAWpB,GAAX,EADzB;AAEA;AAED;AACD;AACA;AACA;AACA;;;AAoFC+C,EAAAA,MAAM,GAAG;AACR,UAAM;AACJd,MAAAA,KAAK,GAAG,EADJ;AAEJR,MAAAA,MAAM,GAAG;AAFL,QAGD,KAAKL,KAHV;AAAA,UAIC;AACCO,MAAAA,uBAAuB,GAAG,KAD3B;AAECG,MAAAA,MAAM,GAAG;AAFV,QAGI,KAAKO,KAPV;AASA,wBACC,QAAC,IAAD;AACC,MAAA,EAAE,EAAE,qBADL;AAEC,MAAA,EAAE,EAAE,EAFL;AAGC,MAAA,EAAE,EAAE,EAHL;AAIC,MAAA,EAAE,EAAE,EAJL;AAKC,MAAA,EAAE,EAAE,EALL;AAMC,MAAA,IAAI,MANL;AAOC,MAAA,SAAS,MAPV;AAAA,8BASC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWW;AAAhC;AAAA;AAAA;AAAA;AAAA,cATD,eAUC,QAAC,IAAD;AACC,QAAA,EAAE,EAAE,6BADL;AAEC,QAAA,EAAE,EAAE,EAFL;AAGC,QAAA,EAAE,EAAE,EAHL;AAIC,QAAA,EAAE,EAAE,EAJL;AAKC,QAAA,EAAE,EAAE,EALL;AAMC,QAAA,IAAI,MANL;AAOC,QAAA,SAAS,MAPV;AAAA,+BASC,QAAC,MAAD;AACC,UAAA,OAAO,EAAE,UADV;AAEC,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,cAVD,eA0BC,QAAC,cAAD;AACC,QAAA,SAAS,EAAE,OADZ;AAAA,+BAGC,QAAC,KAAD;AAAA,kCACC,QAAC,SAAD;AAAA,mCACC,QAAC,QAAD;AAAA,sCACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAIC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJD,eAOC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPD,eAUC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVD,eAaC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbD,eAgBC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAuBC,QAAC,SAAD;AAAA,kDACE,IADF,8BACqBC,KADrB,EAC4BR,MAD5B,EACoCE,uBADpC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBD,eA2BC,QAAC,IAAD;AACC,YAAA,WAAW,MADZ;AAEC,YAAA,IAAI,EAAEA,uBAFP;AAGC,YAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,CAAc;AAC5BF,cAAAA,uBAAuB,EAAE,CAACA;AADE,aAAd,CAHhB;AAAA,sBAQEF,MAAM,CAACU,GAAP,CAAWa,CAAC,iBACX,QAAC,QAAD;AAEC,cAAA,OAAO,EAAE,MAAM;AACd,qBAAK5B,KAAL,CAAWnB,MAAX,CAAkB6B,MAAlB,EAA0B;AACzBmB,kBAAAA,SAAS,EAAED,CAAC,CAAC1B;AADY,iBAA1B;AAGA,qBAAKO,QAAL,CAAc;AACbF,kBAAAA,uBAAuB,EAAE,CAACA;AADb,iBAAd;AAGA,eATF;AAAA,wBAWEqB,CAAC,CAACzB;AAXJ,eACMyB,CAAC,CAAC1B,EADR;AAAA;AAAA;AAAA;AAAA,oBADD;AARF;AAAA;AAAA;AAAA;AAAA,kBA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,cA1BD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAsFA;;AA3MqC;;AA8MvC,MAAM4B,eAAe,GAAGb,KAAK,IAAI;AAChC,QAAM;AACLc,IAAAA,WADK;AAELC,IAAAA;AAFK,MAGFf,KAHJ;AAKA,SAAO,EACN,GAAGc,WADG;AAEN,OAAGC;AAFG,GAAP;AAIA,CAVD;;AAYA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvCtD,EAAAA,GAAG,EAAE,MAAMsD,QAAQ,CAACtD,GAAG,CAAC,CACvB,QADuB,CAAD,CAAJ,CADoB;AAIvCE,EAAAA,SAAS,EAAE,MAAMoD,QAAQ,CAACpD,SAAS,EAAV,CAJc;AAKvCD,EAAAA,MAAM,EAAE,CAACqB,EAAD,EAAKiC,IAAL,KAAcD,QAAQ,CAACrD,MAAM,CAACqB,EAAD,EAAKiC,IAAL,CAAP,CALS;AAMvCxD,EAAAA,KAAK,EAAGuB,EAAD,IAAQgC,QAAQ,CAACvD,KAAK,CAACuB,EAAD,CAAN;AANgB,CAAL,CAAnC;;AASA,eAAexB,OAAO,CAACoD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpC,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {erase, get, update} from \"../actions/Tasks\";\nimport {get as getStatus} from '../actions/Status';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport {\n\tButton,\n\tGrid,\n\tMenu,\n\tMenuItem,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow\n} from \"@mui/material\";\nimport Pusher from 'pusher-js';\n\n\nclass MainPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchangeStatusOptionsOpen: false,\n\t\t\ttaskId: null,\n\t\t};\n\t\tthis.props.get();\n\t\tthis.pusher = new Pusher(process.env.REACT_APP_PUSHER_ID, {\n\t\t\tcluster: 'eu'\n\t\t});\n\t\tthis.pusher.logToConsole = true;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.pusher.subscribe('my-channel')\n\t\t\t.bind('my-event', () => this.props.get());\n\t}\n\n\t/**\n\t * @param task\n\t * @returns {JSX.Element}\n\t * @private\n\t */\n\t#_renderCommonColumns = (task = {\n\t\tid: null,\n\t\tname: \"\",\n\t\tis_closed: false,\n\t\tstatus: {\n\t\t\tname: \"\",\n\t\t},\n\t\tformatted_created_date: \"\",\n\t}): JSX.Element => (\n\t\t<>\n\t\t\t<TableCell>\n\t\t\t\t{task?.id}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.task?.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.is_closed ? \"Closed\" : \"Open\"}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.task?.status?.name}\n\t\t\t</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{task?.formatted_created_date}\n\t\t\t</TableCell>\n\t\t</>\n\t);\n\n\t#_renderActionButtons = (task, status, changeStatusOptionsOpen) => {\n\t\treturn (\n\t\t\t<TableCell>\n\t\t\t\t<Button\n\t\t\t\t\tid={task.id}\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.getStatus();\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen,\n\t\t\t\t\t\t\ttaskId: task.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCHANGE STATUS\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tid={task.id}\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => this.props.history.push(`/tasks/edit/${task.id}`)}\n\t\t\t\t>\n\t\t\t\t\t<EditIcon/>\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={\"delete-button\"}\n\t\t\t\t\tid={task.id}\n\t\t\t\t\taria-expanded={changeStatusOptionsOpen ? 'true' : undefined}\n\t\t\t\t\tonClick={() => this.props.erase(task.id)}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon/>\n\t\t\t\t</Button>\n\t\t\t</TableCell>\n\t\t);\n\t}\n\n\t#_renderTasks = (tasks, status, changeStatusOptionsOpen) => {\n\n\t\tif (tasks.length > 0) {\n\t\t\treturn tasks.map((t) =>\n\t\t\t\t<TableRow key={t.id}>\n\t\t\t\t\t{this.#_renderCommonColumns(t)}\n\t\t\t\t\t{this.#_renderActionButtons(t, status, changeStatusOptionsOpen)}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell colSpan={6}>\n\t\t\t\t\tNO TASKS FOUND\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t\ttasks = [],\n\t\t\t\tstatus = [],\n\t\t\t} = this.props,\n\t\t\t{\n\t\t\t\tchangeStatusOptionsOpen = false,\n\t\t\t\ttaskId = null,\n\t\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tid={\"main-page-container\"}\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tlg={12}\n\t\t\t\tmd={12}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<HeaderMenu history={this.props.history}/>\n\t\t\t\t<Grid\n\t\t\t\t\tid={\"main-page-buttons-container\"}\n\t\t\t\t\txs={12}\n\t\t\t\t\tsm={12}\n\t\t\t\t\tlg={12}\n\t\t\t\t\tmd={12}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\t\tonClick={() => this.props.history.push(\"/tasks/add\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tADD NEW TASK\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<TableContainer\n\t\t\t\t\tclassName={\"table\"}\n\t\t\t\t>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tID\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tClosed\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tCREATE DATE\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\tACTIONS\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{this.#_renderTasks(tasks, status, changeStatusOptionsOpen)}\n\t\t\t\t\t\t</TableBody>\n\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\topen={changeStatusOptionsOpen}\n\t\t\t\t\t\t\tonClose={() => this.setState({\n\t\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstatus.map(s =>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={s.id}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.update(taskId, {\n\t\t\t\t\t\t\t\t\t\t\t\tstatus_id: s.id,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tchangeStatusOptionsOpen: !changeStatusOptionsOpen\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst {\n\t\tStatusStore,\n\t\tTasksStore,\n\t} = state;\n\n\treturn {\n\t\t...StatusStore,\n\t\t...TasksStore,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tget: () => dispatch(get([\n\t\t\"status\",\n\t])),\n\tgetStatus: () => dispatch(getStatus()),\n\tupdate: (id, body) => dispatch(update(id, body)),\n\terase: (id) => dispatch(erase(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n"]},"metadata":{},"sourceType":"module"}