{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDetailsHeader.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, Grid } from \"@mui/material\";\nimport TaskChangeStatus from \"./TaskChangeStatus\";\nimport TaskName from \"./TaskName\";\nimport TaskDeadline from \"./TaskDeadline\";\nimport PropTypes from \"prop-types\";\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskDetailsHeader = function () {\n  _s();\n\n  var _task$name, _props$task, _props$status, _props$task2;\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    handleClose: () => {},\n    find: id => {},\n    update: (id, body) => {},\n    task: {\n      name: \"\"\n    },\n    status: []\n  };\n  const {\n    update = () => {},\n    task = {\n      name: \"\",\n      id: 0,\n      status: {\n        name: \"\"\n      }\n    }\n  } = props;\n  const [name, setTaskName] = React.useState((_task$name = task === null || task === void 0 ? void 0 : task.name) !== null && _task$name !== void 0 ? _task$name : \"Type your task name\");\n  const [taskNameFocus, setTaskNameFocus] = React.useState(false);\n  useEffect(() => {\n    if (!taskNameFocus && task.name !== name) {\n      update(task.id, {\n        name\n      });\n    }\n  }, [name, taskNameFocus, update, task.name, task.id]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    alignContent: \"center\",\n    alignItems: \"center\",\n    direction: 'column',\n    className: \"task-details-header-container\",\n    item: true,\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      direction: 'row',\n      alignItems: \"center\",\n      alignContent: \"center\",\n      spacing: 2,\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(TaskChangeStatus, {\n        task: (_props$task = props === null || props === void 0 ? void 0 : props.task) !== null && _props$task !== void 0 ? _props$task : {},\n        update: props === null || props === void 0 ? void 0 : props.update,\n        status: (_props$status = props === null || props === void 0 ? void 0 : props.status) !== null && _props$status !== void 0 ? _props$status : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(TaskDeadline, {\n        update: props === null || props === void 0 ? void 0 : props.update,\n        task: (_props$task2 = props === null || props === void 0 ? void 0 : props.task) !== null && _props$task2 !== void 0 ? _props$task2 : {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(TaskName, {\n        name: name,\n        taskNameFocus: taskNameFocus,\n        setTaskNameFocus: setTaskNameFocus,\n        setTaskName: setTaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 1,\n        sm: 1,\n        md: 1,\n        lg: 1,\n        alignContent: \"flex-end\",\n        alignItems: \"flex-end\",\n        direction: 'column',\n        item: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => {\n            props.handleClose(props.taskModalOpen);\n            props.find(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TaskDetailsHeader, \"xEDZthNobnCOPKpfZLUJdUFiZbE=\");\n\n_c = TaskDetailsHeader;\nTaskDetailsHeader.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  find: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n  task: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired\n  }).isRequired,\n  status: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\nexport default TaskDetailsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetailsHeader\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/components/Task/TaskDetailsHeader.js"],"names":["React","useEffect","CloseIcon","Button","Grid","TaskChangeStatus","TaskName","TaskDeadline","PropTypes","TaskDetailsHeader","props","handleClose","find","id","update","body","task","name","status","setTaskName","useState","taskNameFocus","setTaskNameFocus","taskModalOpen","propTypes","func","isRequired","shape","number","string","arrayOf"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useEffect} from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport {Button, Grid} from \"@mui/material\";\nimport TaskChangeStatus from \"./TaskChangeStatus\";\nimport TaskName from \"./TaskName\";\nimport TaskDeadline from \"./TaskDeadline\";\nimport PropTypes from \"prop-types\";\n\n\n/**\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst TaskDetailsHeader = (props = {\n\thandleClose: () => {\n\t},\n\tfind: (id) => {\n\t},\n\tupdate: (id, body) => {\n\t},\n\ttask: {\n\t\tname: \"\",\n\t},\n\tstatus: [],\n}) => {\n\tconst {\n\t\tupdate = () => {\n\t\t},\n\t\ttask = {\n\t\t\tname: \"\",\n\t\t\tid: 0,\n\t\t\tstatus: {\n\t\t\t\tname: \"\",\n\t\t\t}\n\t\t}\n\t} = props;\n\tconst [name, setTaskName] = React.useState(task?.name ?? \"Type your task name\");\n\tconst [taskNameFocus, setTaskNameFocus] = React.useState(false);\n\n\n\tuseEffect(() => {\n\t\tif (!taskNameFocus && task.name !== name) {\n\t\t\tupdate(task.id, {\n\t\t\t\tname\n\t\t\t});\n\t\t}\n\t}, [\n\t\tname,\n\t\ttaskNameFocus,\n\t\tupdate,\n\t\ttask.name,\n\t\ttask.id,\n\t]);\n\n\treturn (\n\t\t<Grid\n\t\t\txs={12}\n\t\t\tsm={12}\n\t\t\tmd={12}\n\t\t\tlg={12}\n\t\t\talignContent={\"center\"}\n\t\t\talignItems={\"center\"}\n\t\t\tdirection={'column'}\n\t\t\tclassName={\"task-details-header-container\"}\n\t\t\titem\n\t\t\tcontainer\n\t\t>\n\t\t\t<Grid\n\t\t\t\txs={12}\n\t\t\t\tsm={12}\n\t\t\t\tmd={12}\n\t\t\t\tlg={12}\n\t\t\t\tdirection={'row'}\n\t\t\t\talignItems={\"center\"}\n\t\t\t\talignContent={\"center\"}\n\t\t\t\tspacing={2}\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<TaskChangeStatus\n\t\t\t\t\ttask={props?.task ?? {}}\n\t\t\t\t\tupdate={props?.update}\n\t\t\t\t\tstatus={props?.status ?? []}\n\t\t\t\t/>\n\t\t\t\t<TaskDeadline\n\t\t\t\t\tupdate={props?.update}\n\t\t\t\t\ttask={props?.task ?? {}}\n\t\t\t\t/>\n\t\t\t\t<TaskName\n\t\t\t\t\tname={name}\n\t\t\t\t\ttaskNameFocus={taskNameFocus}\n\t\t\t\t\tsetTaskNameFocus={setTaskNameFocus}\n\t\t\t\t\tsetTaskName={setTaskName}\n\t\t\t\t/>\n\t\t\t\t<Grid\n\t\t\t\t\txs={1}\n\t\t\t\t\tsm={1}\n\t\t\t\t\tmd={1}\n\t\t\t\t\tlg={1}\n\t\t\t\t\talignContent={\"flex-end\"}\n\t\t\t\t\talignItems={\"flex-end\"}\n\t\t\t\t\tdirection={'column'}\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={\"outlined\"}\n\t\t\t\t\t\tcolor={\"primary\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.handleClose(props.taskModalOpen);\n\t\t\t\t\t\t\tprops.find(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nTaskDetailsHeader.propTypes = {\n\thandleClose: PropTypes.func.isRequired,\n\tfind: PropTypes.func.isRequired,\n\tupdate: PropTypes.func.isRequired,\n\ttask: PropTypes.shape({\n\t\tid: PropTypes.number.isRequired,\n\t\tname: PropTypes.string.isRequired\n\t}).isRequired,\n\tstatus: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t}).isRequired,\n\t).isRequired,\n};\n\nexport default TaskDetailsHeader;"]},"metadata":{},"sourceType":"module"}