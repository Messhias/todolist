{"ast":null,"code":"var _jsxFileName = \"/Users/collegia/Documents/projects/todolist/frontend/src/utils/Routes.js\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Pages from \"../Pages\";\nimport { getUserToken } from \"./Helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MountRoutes = () => {\n  const privateRoutes = {\n    \"/\": Pages.MainPage,\n    \"/main-page\": Pages.MainPage,\n    \"/status\": Pages.Status,\n    \"/tasks/add\": Pages.AddNewTask,\n    \"/tasks/edit/:id\": Pages.AddNewTask\n  };\n  const publicRoutes = {\n    \"/login\": Pages.Login\n  };\n  return [...Object.entries(privateRoutes).map(([path, component]) => /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: path,\n    component: component\n  }, path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 4\n  }, this)), ...Object.entries(privateRoutes).map(([path, component]) => /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: path,\n    component: component\n  }, path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 4\n  }, this))];\n};\n\n_c = MountRoutes;\n\nconst Routes = () => /*#__PURE__*/_jsxDEV(Router, {\n  basename: \"/\",\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: MountRoutes()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 2\n}, this);\n\n_c2 = Routes;\nexport default Routes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MountRoutes\");\n$RefreshReg$(_c2, \"Routes\");","map":{"version":3,"sources":["/Users/collegia/Documents/projects/todolist/frontend/src/utils/Routes.js"],"names":["Route","BrowserRouter","Router","Switch","Pages","getUserToken","MountRoutes","privateRoutes","MainPage","Status","AddNewTask","publicRoutes","Login","Object","entries","map","path","component","Routes"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,aAAa,IAAIC,MAAhC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAMC,aAAa,GAAG;AACrB,SAAKH,KAAK,CAACI,QADU;AAErB,kBAAcJ,KAAK,CAACI,QAFC;AAGrB,eAAWJ,KAAK,CAACK,MAHI;AAIrB,kBAAcL,KAAK,CAACM,UAJC;AAKrB,uBAAmBN,KAAK,CAACM;AALJ,GAAtB;AAQA,QAAMC,YAAY,GAAG;AACpB,cAAUP,KAAK,CAACQ;AADI,GAArB;AAIA,SAAO,CACN,GAAGC,MAAM,CAACC,OAAP,CAAeP,aAAf,EAA8BQ,GAA9B,CAAkC,CAAC,CAACC,IAAD,EAAOC,SAAP,CAAD,kBACpC,QAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAED,IAFP;AAGC,IAAA,SAAS,EAAEC;AAHZ,KAIMD,IAJN;AAAA;AAAA;AAAA;AAAA,UADE,CADG,EASN,GAAGH,MAAM,CAACC,OAAP,CAAeP,aAAf,EAA8BQ,GAA9B,CAAkC,CAAC,CAACC,IAAD,EAAOC,SAAP,CAAD,kBACpC,QAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAED,IAFP;AAGC,IAAA,SAAS,EAAEC;AAHZ,KAIMD,IAJN;AAAA;AAAA;AAAA;AAAA,UADE,CATG,CAAP;AAkBA,CA/BD;;KAAMV,W;;AAiCN,MAAMY,MAAM,GAAG,mBACd,QAAC,MAAD;AAAQ,EAAA,QAAQ,EAAE,GAAlB;AAAA,yBACC,QAAC,MAAD;AAAA,cACEZ,WAAW;AADb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADD;;MAAMY,M;AAQN,eAAeA,MAAf","sourcesContent":["import {Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport Pages from \"../Pages\";\nimport {getUserToken} from \"./Helpers\";\n\nconst MountRoutes = () => {\n\tconst privateRoutes = {\n\t\t\"/\": Pages.MainPage,\n\t\t\"/main-page\": Pages.MainPage,\n\t\t\"/status\": Pages.Status,\n\t\t\"/tasks/add\": Pages.AddNewTask,\n\t\t\"/tasks/edit/:id\": Pages.AddNewTask,\n\t};\n\n\tconst publicRoutes = {\n\t\t\"/login\": Pages.Login,\n\t};\n\n\treturn [\n\t\t...Object.entries(privateRoutes).map(([path, component]) =>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={path}\n\t\t\t\tcomponent={component}\n\t\t\t\tkey={path}\n\t\t\t/>\n\t\t),\n\t\t...Object.entries(privateRoutes).map(([path, component]) =>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={path}\n\t\t\t\tcomponent={component}\n\t\t\t\tkey={path}\n\t\t\t/>\n\t\t),\n\t];\n}\n\nconst Routes = () => (\n\t<Router basename={\"/\"}>\n\t\t<Switch>\n\t\t\t{MountRoutes()}\n\t\t</Switch>\n\t</Router>\n);\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}